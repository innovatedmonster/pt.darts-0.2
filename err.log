nohup: ignoring input
11/20 02:58:19 PM | 
11/20 02:58:19 PM | Parameters:
11/20 02:58:19 PM | ALPHA_LR=0.0003
11/20 02:58:19 PM | ALPHA_WEIGHT_DECAY=0.001
11/20 02:58:19 PM | BATCH_SIZE=64
11/20 02:58:19 PM | DATA_PATH=./data/
11/20 02:58:19 PM | DATASET=cifar10
11/20 02:58:19 PM | EPOCHS=100
11/20 02:58:19 PM | GPUS=[4, 5, 6, 7]
11/20 02:58:19 PM | INIT_CHANNELS=16
11/20 02:58:19 PM | LAYERS=8
11/20 02:58:19 PM | NAME=cifar10
11/20 02:58:19 PM | PATH=searchs/cifar10
11/20 02:58:19 PM | PLOT_PATH=searchs/cifar10/plots
11/20 02:58:19 PM | PRINT_FREQ=50
11/20 02:58:19 PM | SEED=2
11/20 02:58:19 PM | W_GRAD_CLIP=5.0
11/20 02:58:19 PM | W_LR=0.07
11/20 02:58:19 PM | W_LR_MIN=0.001
11/20 02:58:19 PM | W_MOMENTUM=0.9
11/20 02:58:19 PM | W_WEIGHT_DECAY=0.0003
11/20 02:58:19 PM | WORKERS=4
11/20 02:58:19 PM | 
11/20 02:58:27 PM | Logger is set - training start
Files already downloaded and verified
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:143: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:143: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1249, 0.1252, 0.1249, 0.1249, 0.1249, 0.1252, 0.1249, 0.1250],
        [0.1249, 0.1251, 0.1250, 0.1250, 0.1252, 0.1249, 0.1250, 0.1250]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1249, 0.1253, 0.1250, 0.1250, 0.1249, 0.1250, 0.1250, 0.1249],
        [0.1251, 0.1247, 0.1249, 0.1253, 0.1248, 0.1249, 0.1251, 0.1253],
        [0.1250, 0.1250, 0.1249, 0.1251, 0.1252, 0.1250, 0.1251, 0.1249]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1250, 0.1249, 0.1250, 0.1250, 0.1250, 0.1251, 0.1249, 0.1251],
        [0.1250, 0.1249, 0.1251, 0.1249, 0.1249, 0.1253, 0.1252, 0.1248],
        [0.1250, 0.1250, 0.1251, 0.1248, 0.1251, 0.1250, 0.1251, 0.1250],
        [0.1250, 0.1251, 0.1250, 0.1251, 0.1251, 0.1251, 0.1249, 0.1248]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1250, 0.1250, 0.1249, 0.1249, 0.1251, 0.1250, 0.1249, 0.1252],
        [0.1250, 0.1252, 0.1252, 0.1248, 0.1250, 0.1249, 0.1248, 0.1251],
        [0.1251, 0.1251, 0.1250, 0.1251, 0.1248, 0.1250, 0.1249, 0.1249],
        [0.1249, 0.1250, 0.1250, 0.1253, 0.1251, 0.1251, 0.1247, 0.1249],
        [0.1251, 0.1251, 0.1252, 0.1249, 0.1249, 0.1251, 0.1250, 0.1249]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1248, 0.1249, 0.1249, 0.1251, 0.1250, 0.1250, 0.1251, 0.1251],
        [0.1250, 0.1248, 0.1249, 0.1252, 0.1249, 0.1250, 0.1249, 0.1251]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1251, 0.1249, 0.1252, 0.1249, 0.1250, 0.1250, 0.1249, 0.1250],
        [0.1250, 0.1249, 0.1250, 0.1251, 0.1251, 0.1249, 0.1250, 0.1251],
        [0.1250, 0.1250, 0.1250, 0.1249, 0.1250, 0.1250, 0.1250, 0.1252]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1251, 0.1247, 0.1249, 0.1252, 0.1252, 0.1249, 0.1251, 0.1249],
        [0.1250, 0.1250, 0.1250, 0.1251, 0.1253, 0.1249, 0.1249, 0.1248],
        [0.1250, 0.1252, 0.1250, 0.1250, 0.1251, 0.1248, 0.1251, 0.1249],
        [0.1250, 0.1251, 0.1251, 0.1249, 0.1248, 0.1251, 0.1250, 0.1250]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1250, 0.1249, 0.1251, 0.1251, 0.1251, 0.1249, 0.1250, 0.1250],
        [0.1252, 0.1249, 0.1251, 0.1251, 0.1250, 0.1249, 0.1249, 0.1249],
        [0.1249, 0.1250, 0.1251, 0.1250, 0.1249, 0.1250, 0.1250, 0.1252],
        [0.1250, 0.1249, 0.1250, 0.1251, 0.1250, 0.1251, 0.1250, 0.1249],
        [0.1249, 0.1251, 0.1250, 0.1251, 0.1248, 0.1251, 0.1249, 0.1251]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
Files already downloaded and verified
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:143: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
Files already downloaded and verified
Files already downloaded and verified
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:143: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
11/20 02:59:04 PM | Train: [ 1/100] Step 000/097 Loss 2.392 Prec@(1,5) (9.4%, 53.1%)
11/20 03:10:04 PM | Train: [ 1/100] Step 050/097 Loss 2.233 Prec@(1,5) (19.5%, 74.3%)
11/20 03:20:17 PM | Train: [ 1/100] Step 097/097 Loss 2.070 Prec@(1,5) (23.8%, 79.2%)
11/20 03:22:48 PM | Train: [ 1/100] Final Prec@1 23.7920%
11/20 03:22:50 PM | Valid: [ 1/100] Step 000/097 Loss 1.862 Prec@(1,5) (29.7%, 79.7%)
11/20 03:24:18 PM | Valid: [ 1/100] Step 050/097 Loss 1.739 Prec@(1,5) (34.3%, 87.8%)
11/20 03:25:41 PM | Valid: [ 1/100] Step 097/097 Loss 1.729 Prec@(1,5) (33.9%, 88.3%)
11/20 03:25:41 PM | Valid: [ 1/100] Final Prec@1 33.8560%
11/20 03:25:41 PM | genotype = Genotype(normal=[[('dil_conv_5x5', 0), ('dil_conv_3x3', 1)], [('dil_conv_3x3', 2), ('sep_conv_3x3', 0)], [('sep_conv_3x3', 3), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 4), ('sep_conv_5x5', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('dil_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('sep_conv_3x3', 0), ('sep_conv_3x3', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1172, 0.1056, 0.1172, 0.1176, 0.1255, 0.1272, 0.1523, 0.1372],
        [0.1097, 0.1032, 0.1131, 0.1234, 0.1284, 0.1402, 0.1283, 0.1537]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1125, 0.1073, 0.1162, 0.1367, 0.1212, 0.1351, 0.1306, 0.1405],
        [0.1142, 0.1101, 0.1175, 0.1230, 0.1337, 0.1332, 0.1238, 0.1445],
        [0.0927, 0.0886, 0.1134, 0.1301, 0.1401, 0.1435, 0.1364, 0.1553]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1165, 0.1123, 0.1176, 0.1252, 0.1295, 0.1317, 0.1273, 0.1399],
        [0.1097, 0.1073, 0.1134, 0.1301, 0.1299, 0.1370, 0.1286, 0.1440],
        [0.0962, 0.0918, 0.1149, 0.1305, 0.1404, 0.1311, 0.1439, 0.1514],
        [0.0902, 0.0843, 0.1001, 0.1474, 0.1406, 0.1461, 0.1319, 0.1594]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1126, 0.1084, 0.1141, 0.1343, 0.1297, 0.1322, 0.1274, 0.1413],
        [0.1112, 0.1092, 0.1144, 0.1288, 0.1256, 0.1364, 0.1305, 0.1440],
        [0.0937, 0.0900, 0.1143, 0.1376, 0.1404, 0.1329, 0.1364, 0.1547],
        [0.0891, 0.0833, 0.1001, 0.1391, 0.1445, 0.1415, 0.1400, 0.1623],
        [0.0845, 0.0787, 0.0861, 0.1390, 0.1528, 0.1455, 0.1474, 0.1660]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1373, 0.1297, 0.1192, 0.1212, 0.1215, 0.1303, 0.1212, 0.1196],
        [0.1188, 0.1181, 0.1326, 0.1283, 0.1253, 0.1300, 0.1177, 0.1293]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1321, 0.1281, 0.1234, 0.1250, 0.1234, 0.1218, 0.1245, 0.1218],
        [0.1205, 0.1211, 0.1288, 0.1233, 0.1261, 0.1299, 0.1245, 0.1258],
        [0.1222, 0.1216, 0.1265, 0.1255, 0.1265, 0.1220, 0.1288, 0.1270]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1298, 0.1270, 0.1244, 0.1251, 0.1241, 0.1235, 0.1241, 0.1220],
        [0.1207, 0.1214, 0.1261, 0.1254, 0.1273, 0.1255, 0.1267, 0.1269],
        [0.1194, 0.1189, 0.1249, 0.1269, 0.1293, 0.1277, 0.1261, 0.1269],
        [0.1187, 0.1196, 0.1248, 0.1278, 0.1280, 0.1270, 0.1269, 0.1272]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1283, 0.1270, 0.1239, 0.1289, 0.1220, 0.1235, 0.1246, 0.1217],
        [0.1240, 0.1247, 0.1259, 0.1234, 0.1268, 0.1255, 0.1236, 0.1261],
        [0.1237, 0.1243, 0.1269, 0.1242, 0.1253, 0.1248, 0.1257, 0.1252],
        [0.1221, 0.1231, 0.1263, 0.1278, 0.1264, 0.1244, 0.1244, 0.1256],
        [0.1205, 0.1226, 0.1257, 0.1265, 0.1270, 0.1271, 0.1245, 0.1260]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 03:25:59 PM | Train: [ 2/100] Step 000/097 Loss 1.700 Prec@(1,5) (26.6%, 85.9%)
11/20 03:36:53 PM | Train: [ 2/100] Step 050/097 Loss 1.751 Prec@(1,5) (33.8%, 87.7%)
11/20 03:47:02 PM | Train: [ 2/100] Step 097/097 Loss 1.713 Prec@(1,5) (35.7%, 88.1%)
11/20 03:49:41 PM | Train: [ 2/100] Final Prec@1 35.6800%
11/20 03:49:44 PM | Valid: [ 2/100] Step 000/097 Loss 1.720 Prec@(1,5) (28.1%, 92.2%)
11/20 03:51:12 PM | Valid: [ 2/100] Step 050/097 Loss 1.612 Prec@(1,5) (38.8%, 89.7%)
11/20 03:52:35 PM | Valid: [ 2/100] Step 097/097 Loss 1.600 Prec@(1,5) (38.9%, 90.3%)
11/20 03:52:35 PM | Valid: [ 2/100] Final Prec@1 38.9280%
11/20 03:52:35 PM | genotype = Genotype(normal=[[('dil_conv_5x5', 0), ('dil_conv_3x3', 1)], [('dil_conv_3x3', 2), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 3), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 4), ('dil_conv_5x5', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_3x3', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1250, 0.0981, 0.1191, 0.1114, 0.1272, 0.1255, 0.1519, 0.1419],
        [0.1091, 0.0950, 0.1110, 0.1222, 0.1248, 0.1442, 0.1313, 0.1624]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1163, 0.1028, 0.1195, 0.1339, 0.1168, 0.1313, 0.1330, 0.1465],
        [0.1145, 0.1043, 0.1161, 0.1237, 0.1367, 0.1317, 0.1238, 0.1493],
        [0.0893, 0.0821, 0.1129, 0.1204, 0.1397, 0.1450, 0.1448, 0.1656]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1188, 0.1054, 0.1166, 0.1289, 0.1306, 0.1310, 0.1235, 0.1452],
        [0.1098, 0.1023, 0.1116, 0.1337, 0.1293, 0.1376, 0.1283, 0.1474],
        [0.0917, 0.0836, 0.1121, 0.1321, 0.1446, 0.1278, 0.1473, 0.1607],
        [0.0826, 0.0740, 0.0934, 0.1498, 0.1434, 0.1479, 0.1360, 0.1730]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1142, 0.1025, 0.1130, 0.1354, 0.1281, 0.1307, 0.1283, 0.1478],
        [0.1129, 0.1060, 0.1148, 0.1271, 0.1248, 0.1369, 0.1289, 0.1487],
        [0.0911, 0.0832, 0.1127, 0.1356, 0.1428, 0.1372, 0.1320, 0.1654],
        [0.0829, 0.0739, 0.0941, 0.1389, 0.1447, 0.1411, 0.1493, 0.1752],
        [0.0772, 0.0682, 0.0784, 0.1393, 0.1605, 0.1494, 0.1502, 0.1768]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1464, 0.1305, 0.1180, 0.1209, 0.1254, 0.1272, 0.1169, 0.1148],
        [0.1176, 0.1144, 0.1341, 0.1267, 0.1263, 0.1267, 0.1193, 0.1349]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1387, 0.1298, 0.1216, 0.1245, 0.1221, 0.1202, 0.1233, 0.1197],
        [0.1198, 0.1190, 0.1313, 0.1225, 0.1239, 0.1277, 0.1270, 0.1289],
        [0.1231, 0.1179, 0.1263, 0.1270, 0.1284, 0.1225, 0.1287, 0.1261]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1362, 0.1282, 0.1242, 0.1246, 0.1231, 0.1217, 0.1214, 0.1207],
        [0.1191, 0.1181, 0.1261, 0.1253, 0.1279, 0.1283, 0.1268, 0.1284],
        [0.1192, 0.1146, 0.1231, 0.1268, 0.1311, 0.1293, 0.1298, 0.1261],
        [0.1191, 0.1165, 0.1249, 0.1285, 0.1284, 0.1278, 0.1267, 0.1282]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1333, 0.1278, 0.1233, 0.1248, 0.1249, 0.1232, 0.1229, 0.1198],
        [0.1221, 0.1211, 0.1243, 0.1246, 0.1265, 0.1281, 0.1263, 0.1270],
        [0.1255, 0.1219, 0.1275, 0.1213, 0.1272, 0.1235, 0.1280, 0.1251],
        [0.1213, 0.1195, 0.1251, 0.1301, 0.1271, 0.1238, 0.1281, 0.1251],
        [0.1207, 0.1201, 0.1260, 0.1263, 0.1266, 0.1266, 0.1272, 0.1266]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 03:52:53 PM | Train: [ 3/100] Step 000/097 Loss 1.555 Prec@(1,5) (46.9%, 92.2%)
11/20 04:04:04 PM | Train: [ 3/100] Step 050/097 Loss 1.575 Prec@(1,5) (41.4%, 90.1%)
11/20 04:14:44 PM | Train: [ 3/100] Step 097/097 Loss 1.539 Prec@(1,5) (42.2%, 90.9%)
11/20 04:16:49 PM | Train: [ 3/100] Final Prec@1 42.2080%
11/20 04:16:51 PM | Valid: [ 3/100] Step 000/097 Loss 1.639 Prec@(1,5) (37.5%, 90.6%)
11/20 04:18:18 PM | Valid: [ 3/100] Step 050/097 Loss 1.493 Prec@(1,5) (45.9%, 91.1%)
11/20 04:19:40 PM | Valid: [ 3/100] Step 097/097 Loss 1.472 Prec@(1,5) (46.4%, 91.6%)
11/20 04:19:40 PM | Valid: [ 3/100] Final Prec@1 46.3520%
11/20 04:19:40 PM | genotype = Genotype(normal=[[('dil_conv_3x3', 1), ('dil_conv_5x5', 0)], [('dil_conv_5x5', 2), ('dil_conv_3x3', 1)], [('sep_conv_5x5', 3), ('sep_conv_5x5', 2)], [('sep_conv_5x5', 4), ('dil_conv_5x5', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1465, 0.0886, 0.1177, 0.1109, 0.1252, 0.1213, 0.1476, 0.1422],
        [0.1139, 0.0855, 0.1074, 0.1219, 0.1287, 0.1492, 0.1245, 0.1688]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1293, 0.0962, 0.1194, 0.1364, 0.1104, 0.1272, 0.1319, 0.1493],
        [0.1191, 0.0966, 0.1117, 0.1212, 0.1340, 0.1367, 0.1263, 0.1543],
        [0.0905, 0.0762, 0.1105, 0.1178, 0.1379, 0.1468, 0.1499, 0.1705]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1258, 0.0975, 0.1127, 0.1313, 0.1325, 0.1293, 0.1258, 0.1451],
        [0.1136, 0.0965, 0.1089, 0.1387, 0.1287, 0.1370, 0.1259, 0.1507],
        [0.0924, 0.0781, 0.1100, 0.1296, 0.1526, 0.1295, 0.1414, 0.1664],
        [0.0820, 0.0684, 0.0896, 0.1455, 0.1504, 0.1476, 0.1362, 0.1803]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1213, 0.0978, 0.1114, 0.1310, 0.1274, 0.1308, 0.1297, 0.1507],
        [0.1171, 0.1009, 0.1127, 0.1272, 0.1220, 0.1360, 0.1310, 0.1530],
        [0.0934, 0.0794, 0.1122, 0.1346, 0.1441, 0.1352, 0.1290, 0.1723],
        [0.0822, 0.0686, 0.0900, 0.1380, 0.1438, 0.1390, 0.1563, 0.1820],
        [0.0754, 0.0634, 0.0750, 0.1348, 0.1588, 0.1527, 0.1547, 0.1852]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1619, 0.1284, 0.1157, 0.1188, 0.1210, 0.1256, 0.1180, 0.1106],
        [0.1175, 0.1094, 0.1324, 0.1242, 0.1261, 0.1274, 0.1225, 0.1404]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1495, 0.1298, 0.1184, 0.1224, 0.1225, 0.1196, 0.1191, 0.1186],
        [0.1189, 0.1148, 0.1326, 0.1192, 0.1259, 0.1293, 0.1284, 0.1309],
        [0.1269, 0.1114, 0.1249, 0.1272, 0.1286, 0.1243, 0.1318, 0.1248]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1440, 0.1276, 0.1228, 0.1228, 0.1220, 0.1228, 0.1190, 0.1189],
        [0.1179, 0.1141, 0.1263, 0.1245, 0.1306, 0.1277, 0.1283, 0.1307],
        [0.1209, 0.1092, 0.1217, 0.1231, 0.1367, 0.1300, 0.1330, 0.1255],
        [0.1199, 0.1122, 0.1248, 0.1306, 0.1272, 0.1288, 0.1271, 0.1294]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1395, 0.1266, 0.1242, 0.1201, 0.1277, 0.1223, 0.1215, 0.1182],
        [0.1212, 0.1176, 0.1237, 0.1264, 0.1283, 0.1289, 0.1261, 0.1277],
        [0.1308, 0.1181, 0.1277, 0.1194, 0.1268, 0.1231, 0.1292, 0.1249],
        [0.1229, 0.1153, 0.1247, 0.1314, 0.1247, 0.1232, 0.1338, 0.1241],
        [0.1226, 0.1167, 0.1262, 0.1259, 0.1253, 0.1276, 0.1289, 0.1269]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 04:19:58 PM | Train: [ 4/100] Step 000/097 Loss 1.433 Prec@(1,5) (45.3%, 95.3%)
11/20 04:31:06 PM | Train: [ 4/100] Step 050/097 Loss 1.443 Prec@(1,5) (47.2%, 92.3%)
11/20 04:41:17 PM | Train: [ 4/100] Step 097/097 Loss 1.432 Prec@(1,5) (48.3%, 92.4%)
11/20 04:43:56 PM | Train: [ 4/100] Final Prec@1 48.2560%
11/20 04:43:58 PM | Valid: [ 4/100] Step 000/097 Loss 1.310 Prec@(1,5) (43.8%, 95.3%)
11/20 04:45:25 PM | Valid: [ 4/100] Step 050/097 Loss 1.343 Prec@(1,5) (50.9%, 92.7%)
11/20 04:46:47 PM | Valid: [ 4/100] Step 097/097 Loss 1.323 Prec@(1,5) (51.9%, 93.3%)
11/20 04:46:47 PM | Valid: [ 4/100] Final Prec@1 51.8880%
11/20 04:46:47 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('dil_conv_3x3', 1)], [('dil_conv_3x3', 2), ('dil_conv_3x3', 1)], [('sep_conv_5x5', 3), ('sep_conv_5x5', 2)], [('dil_conv_5x5', 4), ('dil_conv_5x5', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('skip_connect', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1595, 0.0774, 0.1112, 0.1083, 0.1284, 0.1222, 0.1521, 0.1407],
        [0.1186, 0.0756, 0.1020, 0.1272, 0.1239, 0.1511, 0.1233, 0.1784]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1372, 0.0882, 0.1187, 0.1386, 0.1084, 0.1214, 0.1330, 0.1545],
        [0.1244, 0.0885, 0.1089, 0.1162, 0.1342, 0.1397, 0.1285, 0.1596],
        [0.0891, 0.0700, 0.1081, 0.1158, 0.1439, 0.1500, 0.1485, 0.1747]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1346, 0.0912, 0.1112, 0.1350, 0.1309, 0.1228, 0.1264, 0.1478],
        [0.1174, 0.0879, 0.1032, 0.1457, 0.1279, 0.1376, 0.1244, 0.1558],
        [0.0929, 0.0730, 0.1082, 0.1304, 0.1526, 0.1278, 0.1424, 0.1728],
        [0.0790, 0.0617, 0.0840, 0.1448, 0.1541, 0.1463, 0.1394, 0.1905]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1260, 0.0926, 0.1105, 0.1332, 0.1235, 0.1283, 0.1301, 0.1558],
        [0.1209, 0.0947, 0.1097, 0.1300, 0.1241, 0.1303, 0.1305, 0.1599],
        [0.0909, 0.0738, 0.1091, 0.1310, 0.1457, 0.1365, 0.1327, 0.1803],
        [0.0779, 0.0620, 0.0840, 0.1442, 0.1437, 0.1417, 0.1570, 0.1895],
        [0.0706, 0.0576, 0.0696, 0.1318, 0.1603, 0.1576, 0.1612, 0.1913]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1821, 0.1259, 0.1123, 0.1190, 0.1173, 0.1221, 0.1133, 0.1080],
        [0.1200, 0.1078, 0.1287, 0.1248, 0.1280, 0.1240, 0.1225, 0.1442]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1601, 0.1274, 0.1176, 0.1210, 0.1209, 0.1184, 0.1179, 0.1165],
        [0.1181, 0.1109, 0.1361, 0.1196, 0.1268, 0.1298, 0.1266, 0.1320],
        [0.1273, 0.1037, 0.1228, 0.1263, 0.1362, 0.1227, 0.1359, 0.1251]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1525, 0.1257, 0.1194, 0.1206, 0.1224, 0.1219, 0.1195, 0.1180],
        [0.1195, 0.1131, 0.1269, 0.1241, 0.1308, 0.1258, 0.1275, 0.1322],
        [0.1198, 0.1027, 0.1193, 0.1217, 0.1422, 0.1325, 0.1369, 0.1250],
        [0.1212, 0.1082, 0.1251, 0.1319, 0.1274, 0.1290, 0.1270, 0.1301]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1476, 0.1254, 0.1239, 0.1179, 0.1314, 0.1181, 0.1197, 0.1160],
        [0.1210, 0.1151, 0.1228, 0.1244, 0.1301, 0.1297, 0.1284, 0.1285],
        [0.1325, 0.1126, 0.1270, 0.1185, 0.1295, 0.1221, 0.1334, 0.1243],
        [0.1236, 0.1112, 0.1253, 0.1311, 0.1251, 0.1203, 0.1397, 0.1236],
        [0.1236, 0.1130, 0.1271, 0.1230, 0.1254, 0.1296, 0.1311, 0.1273]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 04:47:05 PM | Train: [ 5/100] Step 000/097 Loss 1.569 Prec@(1,5) (40.6%, 89.1%)
11/20 04:57:52 PM | Train: [ 5/100] Step 050/097 Loss 1.301 Prec@(1,5) (52.6%, 93.5%)
11/20 05:08:06 PM | Train: [ 5/100] Step 097/097 Loss 1.295 Prec@(1,5) (53.2%, 93.6%)
11/20 05:11:05 PM | Train: [ 5/100] Final Prec@1 53.2320%
11/20 05:11:07 PM | Valid: [ 5/100] Step 000/097 Loss 1.452 Prec@(1,5) (45.3%, 89.1%)
11/20 05:12:36 PM | Valid: [ 5/100] Step 050/097 Loss 1.255 Prec@(1,5) (54.8%, 94.6%)
11/20 05:13:57 PM | Valid: [ 5/100] Step 097/097 Loss 1.239 Prec@(1,5) (55.0%, 94.8%)
11/20 05:13:57 PM | Valid: [ 5/100] Final Prec@1 55.0400%
11/20 05:13:57 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('dil_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_5x5', 3), ('sep_conv_5x5', 2)], [('dil_conv_5x5', 4), ('dil_conv_5x5', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1802, 0.0699, 0.1049, 0.1095, 0.1309, 0.1211, 0.1475, 0.1359],
        [0.1271, 0.0703, 0.0977, 0.1343, 0.1286, 0.1461, 0.1150, 0.1810]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1428, 0.0823, 0.1154, 0.1376, 0.1124, 0.1159, 0.1382, 0.1553],
        [0.1270, 0.0838, 0.1070, 0.1148, 0.1348, 0.1397, 0.1314, 0.1614],
        [0.0907, 0.0679, 0.1082, 0.1170, 0.1437, 0.1418, 0.1516, 0.1792]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1424, 0.0861, 0.1076, 0.1385, 0.1271, 0.1254, 0.1223, 0.1506],
        [0.1208, 0.0835, 0.1008, 0.1520, 0.1291, 0.1353, 0.1224, 0.1562],
        [0.0930, 0.0695, 0.1059, 0.1290, 0.1557, 0.1272, 0.1418, 0.1779],
        [0.0777, 0.0581, 0.0799, 0.1468, 0.1587, 0.1437, 0.1418, 0.1933]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1324, 0.0891, 0.1085, 0.1322, 0.1267, 0.1255, 0.1284, 0.1571],
        [0.1251, 0.0913, 0.1086, 0.1312, 0.1239, 0.1251, 0.1301, 0.1646],
        [0.0931, 0.0725, 0.1096, 0.1294, 0.1434, 0.1349, 0.1321, 0.1852],
        [0.0791, 0.0604, 0.0829, 0.1483, 0.1402, 0.1390, 0.1529, 0.1972],
        [0.0698, 0.0553, 0.0678, 0.1316, 0.1569, 0.1587, 0.1659, 0.1939]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.1932, 0.1205, 0.1125, 0.1208, 0.1187, 0.1171, 0.1130, 0.1042],
        [0.1179, 0.1050, 0.1230, 0.1230, 0.1297, 0.1281, 0.1247, 0.1486]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1676, 0.1248, 0.1161, 0.1201, 0.1226, 0.1182, 0.1149, 0.1157],
        [0.1173, 0.1091, 0.1365, 0.1185, 0.1296, 0.1296, 0.1253, 0.1341],
        [0.1297, 0.0994, 0.1218, 0.1280, 0.1374, 0.1215, 0.1385, 0.1238]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1567, 0.1224, 0.1203, 0.1192, 0.1243, 0.1210, 0.1190, 0.1171],
        [0.1190, 0.1115, 0.1265, 0.1232, 0.1336, 0.1254, 0.1271, 0.1338],
        [0.1222, 0.0997, 0.1192, 0.1198, 0.1443, 0.1328, 0.1384, 0.1236],
        [0.1213, 0.1049, 0.1239, 0.1316, 0.1278, 0.1309, 0.1289, 0.1307]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1539, 0.1229, 0.1229, 0.1176, 0.1322, 0.1168, 0.1184, 0.1155],
        [0.1195, 0.1123, 0.1215, 0.1223, 0.1307, 0.1302, 0.1335, 0.1299],
        [0.1366, 0.1098, 0.1274, 0.1192, 0.1286, 0.1217, 0.1332, 0.1235],
        [0.1267, 0.1088, 0.1255, 0.1316, 0.1259, 0.1188, 0.1390, 0.1237],
        [0.1259, 0.1102, 0.1266, 0.1212, 0.1274, 0.1303, 0.1315, 0.1270]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 05:14:15 PM | Train: [ 6/100] Step 000/097 Loss 1.333 Prec@(1,5) (45.3%, 96.9%)
11/20 05:25:03 PM | Train: [ 6/100] Step 050/097 Loss 1.180 Prec@(1,5) (57.0%, 95.1%)
11/20 05:35:13 PM | Train: [ 6/100] Step 097/097 Loss 1.194 Prec@(1,5) (56.7%, 95.1%)
11/20 05:38:20 PM | Train: [ 6/100] Final Prec@1 56.7040%
11/20 05:38:23 PM | Valid: [ 6/100] Step 000/097 Loss 1.261 Prec@(1,5) (50.0%, 92.2%)
11/20 05:39:51 PM | Valid: [ 6/100] Step 050/097 Loss 1.142 Prec@(1,5) (58.9%, 95.3%)
11/20 05:41:13 PM | Valid: [ 6/100] Step 097/097 Loss 1.133 Prec@(1,5) (59.2%, 95.3%)
11/20 05:41:14 PM | Valid: [ 6/100] Final Prec@1 59.2160%
11/20 05:41:14 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('dil_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_5x5', 3), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.1972, 0.0657, 0.1049, 0.1084, 0.1309, 0.1168, 0.1416, 0.1345],
        [0.1275, 0.0653, 0.0951, 0.1377, 0.1313, 0.1505, 0.1112, 0.1815]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1493, 0.0784, 0.1145, 0.1352, 0.1157, 0.1180, 0.1324, 0.1564],
        [0.1276, 0.0797, 0.1060, 0.1119, 0.1389, 0.1379, 0.1337, 0.1642],
        [0.0896, 0.0652, 0.1072, 0.1188, 0.1418, 0.1447, 0.1532, 0.1796]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1513, 0.0832, 0.1075, 0.1379, 0.1286, 0.1297, 0.1121, 0.1498],
        [0.1207, 0.0792, 0.0978, 0.1591, 0.1289, 0.1333, 0.1236, 0.1575],
        [0.0948, 0.0691, 0.1071, 0.1323, 0.1503, 0.1231, 0.1385, 0.1848],
        [0.0778, 0.0567, 0.0789, 0.1451, 0.1652, 0.1431, 0.1362, 0.1971]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1386, 0.0873, 0.1090, 0.1331, 0.1215, 0.1239, 0.1298, 0.1568],
        [0.1249, 0.0882, 0.1071, 0.1348, 0.1242, 0.1215, 0.1314, 0.1679],
        [0.0952, 0.0724, 0.1113, 0.1284, 0.1393, 0.1318, 0.1298, 0.1917],
        [0.0797, 0.0593, 0.0828, 0.1501, 0.1411, 0.1347, 0.1486, 0.2036],
        [0.0691, 0.0542, 0.0673, 0.1280, 0.1567, 0.1606, 0.1619, 0.2022]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2144, 0.1173, 0.1058, 0.1201, 0.1184, 0.1129, 0.1123, 0.0990],
        [0.1167, 0.1018, 0.1253, 0.1220, 0.1301, 0.1297, 0.1189, 0.1556]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1844, 0.1256, 0.1123, 0.1180, 0.1212, 0.1165, 0.1102, 0.1119],
        [0.1180, 0.1088, 0.1355, 0.1206, 0.1246, 0.1315, 0.1220, 0.1390],
        [0.1326, 0.0971, 0.1229, 0.1271, 0.1395, 0.1198, 0.1379, 0.1230]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1655, 0.1232, 0.1181, 0.1186, 0.1243, 0.1187, 0.1162, 0.1154],
        [0.1169, 0.1093, 0.1276, 0.1242, 0.1334, 0.1257, 0.1272, 0.1357],
        [0.1230, 0.0968, 0.1184, 0.1154, 0.1454, 0.1341, 0.1440, 0.1229],
        [0.1189, 0.1011, 0.1223, 0.1334, 0.1301, 0.1315, 0.1316, 0.1312]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1619, 0.1219, 0.1223, 0.1173, 0.1315, 0.1164, 0.1162, 0.1125],
        [0.1174, 0.1101, 0.1221, 0.1210, 0.1297, 0.1319, 0.1357, 0.1320],
        [0.1389, 0.1068, 0.1276, 0.1190, 0.1269, 0.1221, 0.1352, 0.1235],
        [0.1273, 0.1061, 0.1263, 0.1311, 0.1269, 0.1198, 0.1378, 0.1248],
        [0.1254, 0.1087, 0.1281, 0.1189, 0.1302, 0.1318, 0.1294, 0.1275]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 05:41:32 PM | Train: [ 7/100] Step 000/097 Loss 1.011 Prec@(1,5) (62.5%, 98.4%)
11/20 05:52:30 PM | Train: [ 7/100] Step 050/097 Loss 1.137 Prec@(1,5) (60.4%, 95.2%)
11/20 06:03:07 PM | Train: [ 7/100] Step 097/097 Loss 1.121 Prec@(1,5) (60.4%, 95.6%)
11/20 06:05:32 PM | Train: [ 7/100] Final Prec@1 60.4000%
11/20 06:05:34 PM | Valid: [ 7/100] Step 000/097 Loss 1.080 Prec@(1,5) (62.5%, 95.3%)
11/20 06:07:03 PM | Valid: [ 7/100] Step 050/097 Loss 1.113 Prec@(1,5) (59.9%, 95.9%)
11/20 06:08:25 PM | Valid: [ 7/100] Step 097/097 Loss 1.099 Prec@(1,5) (60.8%, 95.9%)
11/20 06:08:26 PM | Valid: [ 7/100] Final Prec@1 60.7680%
11/20 06:08:26 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_5x5', 3), ('sep_conv_3x3', 1)], [('dil_conv_3x3', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2170, 0.0619, 0.1032, 0.1050, 0.1280, 0.1137, 0.1365, 0.1347],
        [0.1153, 0.0603, 0.0900, 0.1692, 0.1241, 0.1508, 0.1102, 0.1800]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1544, 0.0749, 0.1141, 0.1378, 0.1178, 0.1157, 0.1282, 0.1571],
        [0.1252, 0.0765, 0.1052, 0.1160, 0.1417, 0.1361, 0.1343, 0.1649],
        [0.0895, 0.0634, 0.1066, 0.1181, 0.1382, 0.1440, 0.1601, 0.1800]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1539, 0.0793, 0.1051, 0.1450, 0.1321, 0.1222, 0.1136, 0.1489],
        [0.1154, 0.0755, 0.0952, 0.1734, 0.1320, 0.1304, 0.1221, 0.1560],
        [0.0941, 0.0667, 0.1056, 0.1314, 0.1515, 0.1221, 0.1384, 0.1903],
        [0.0757, 0.0541, 0.0766, 0.1478, 0.1751, 0.1388, 0.1334, 0.1985]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1429, 0.0842, 0.1090, 0.1329, 0.1224, 0.1201, 0.1304, 0.1581],
        [0.1221, 0.0850, 0.1067, 0.1370, 0.1276, 0.1213, 0.1276, 0.1727],
        [0.0958, 0.0706, 0.1104, 0.1277, 0.1437, 0.1324, 0.1244, 0.1951],
        [0.0784, 0.0571, 0.0812, 0.1565, 0.1419, 0.1294, 0.1502, 0.2053],
        [0.0677, 0.0525, 0.0663, 0.1273, 0.1566, 0.1644, 0.1602, 0.2050]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2248, 0.1108, 0.1050, 0.1216, 0.1203, 0.1117, 0.1097, 0.0962],
        [0.1137, 0.0983, 0.1255, 0.1272, 0.1284, 0.1273, 0.1190, 0.1605]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1925, 0.1217, 0.1093, 0.1180, 0.1225, 0.1159, 0.1104, 0.1096],
        [0.1168, 0.1068, 0.1372, 0.1217, 0.1236, 0.1291, 0.1222, 0.1426],
        [0.1364, 0.0933, 0.1213, 0.1255, 0.1414, 0.1218, 0.1383, 0.1221]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1717, 0.1210, 0.1163, 0.1162, 0.1257, 0.1180, 0.1167, 0.1144],
        [0.1160, 0.1081, 0.1248, 0.1241, 0.1350, 0.1252, 0.1288, 0.1378],
        [0.1264, 0.0940, 0.1175, 0.1117, 0.1487, 0.1319, 0.1479, 0.1219],
        [0.1222, 0.0994, 0.1223, 0.1300, 0.1310, 0.1306, 0.1345, 0.1299]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1669, 0.1196, 0.1235, 0.1179, 0.1311, 0.1161, 0.1129, 0.1119],
        [0.1171, 0.1093, 0.1215, 0.1222, 0.1291, 0.1304, 0.1362, 0.1341],
        [0.1418, 0.1028, 0.1265, 0.1193, 0.1274, 0.1238, 0.1348, 0.1236],
        [0.1296, 0.1031, 0.1256, 0.1280, 0.1301, 0.1197, 0.1396, 0.1244],
        [0.1252, 0.1045, 0.1254, 0.1174, 0.1373, 0.1319, 0.1319, 0.1264]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 06:08:44 PM | Train: [ 8/100] Step 000/097 Loss 1.347 Prec@(1,5) (54.7%, 90.6%)
11/20 06:19:37 PM | Train: [ 8/100] Step 050/097 Loss 1.071 Prec@(1,5) (62.6%, 95.8%)
11/20 06:29:47 PM | Train: [ 8/100] Step 097/097 Loss 1.066 Prec@(1,5) (62.1%, 96.0%)
11/20 06:32:35 PM | Train: [ 8/100] Final Prec@1 62.0960%
11/20 06:32:38 PM | Valid: [ 8/100] Step 000/097 Loss 1.053 Prec@(1,5) (67.2%, 95.3%)
11/20 06:34:05 PM | Valid: [ 8/100] Step 050/097 Loss 1.042 Prec@(1,5) (63.4%, 96.1%)
11/20 06:35:28 PM | Valid: [ 8/100] Step 097/097 Loss 1.042 Prec@(1,5) (63.4%, 96.3%)
11/20 06:35:28 PM | Valid: [ 8/100] Final Prec@1 63.3600%
11/20 06:35:28 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('dil_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2245, 0.0598, 0.1031, 0.1058, 0.1326, 0.1118, 0.1289, 0.1335],
        [0.1158, 0.0597, 0.0932, 0.1757, 0.1200, 0.1456, 0.1091, 0.1810]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1506, 0.0728, 0.1136, 0.1442, 0.1194, 0.1094, 0.1312, 0.1588],
        [0.1251, 0.0742, 0.1054, 0.1193, 0.1445, 0.1408, 0.1270, 0.1636],
        [0.0870, 0.0607, 0.1044, 0.1184, 0.1443, 0.1405, 0.1623, 0.1823]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1617, 0.0786, 0.1063, 0.1455, 0.1291, 0.1179, 0.1103, 0.1506],
        [0.1125, 0.0732, 0.0933, 0.1914, 0.1295, 0.1290, 0.1199, 0.1512],
        [0.0950, 0.0651, 0.1039, 0.1364, 0.1400, 0.1216, 0.1430, 0.1950],
        [0.0768, 0.0532, 0.0765, 0.1386, 0.1783, 0.1375, 0.1366, 0.2025]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1480, 0.0837, 0.1111, 0.1306, 0.1222, 0.1135, 0.1327, 0.1584],
        [0.1250, 0.0842, 0.1073, 0.1366, 0.1281, 0.1173, 0.1250, 0.1765],
        [0.0986, 0.0695, 0.1096, 0.1261, 0.1422, 0.1311, 0.1229, 0.1999],
        [0.0796, 0.0561, 0.0809, 0.1511, 0.1379, 0.1319, 0.1497, 0.2127],
        [0.0670, 0.0511, 0.0648, 0.1306, 0.1603, 0.1593, 0.1604, 0.2066]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2296, 0.1066, 0.1035, 0.1202, 0.1256, 0.1099, 0.1096, 0.0951],
        [0.1167, 0.0984, 0.1236, 0.1255, 0.1285, 0.1269, 0.1174, 0.1629]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1974, 0.1187, 0.1113, 0.1191, 0.1219, 0.1149, 0.1082, 0.1086],
        [0.1167, 0.1054, 0.1389, 0.1191, 0.1205, 0.1329, 0.1213, 0.1451],
        [0.1369, 0.0897, 0.1187, 0.1269, 0.1446, 0.1219, 0.1408, 0.1205]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1745, 0.1188, 0.1146, 0.1167, 0.1260, 0.1173, 0.1174, 0.1148],
        [0.1172, 0.1084, 0.1257, 0.1220, 0.1353, 0.1259, 0.1271, 0.1384],
        [0.1297, 0.0923, 0.1167, 0.1102, 0.1503, 0.1311, 0.1475, 0.1222],
        [0.1242, 0.0974, 0.1200, 0.1317, 0.1310, 0.1300, 0.1382, 0.1277]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1689, 0.1174, 0.1228, 0.1217, 0.1335, 0.1136, 0.1109, 0.1111],
        [0.1168, 0.1082, 0.1217, 0.1210, 0.1260, 0.1324, 0.1388, 0.1351],
        [0.1465, 0.1011, 0.1255, 0.1191, 0.1284, 0.1233, 0.1322, 0.1241],
        [0.1358, 0.1022, 0.1253, 0.1280, 0.1295, 0.1165, 0.1387, 0.1240],
        [0.1289, 0.1038, 0.1253, 0.1152, 0.1381, 0.1317, 0.1316, 0.1253]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 06:35:46 PM | Train: [ 9/100] Step 000/097 Loss 1.001 Prec@(1,5) (65.6%, 92.2%)
11/20 06:46:33 PM | Train: [ 9/100] Step 050/097 Loss 0.992 Prec@(1,5) (64.3%, 96.9%)
11/20 06:56:38 PM | Train: [ 9/100] Step 097/097 Loss 0.996 Prec@(1,5) (64.7%, 96.5%)
11/20 06:59:43 PM | Train: [ 9/100] Final Prec@1 64.7040%
11/20 06:59:46 PM | Valid: [ 9/100] Step 000/097 Loss 0.999 Prec@(1,5) (65.6%, 96.9%)
11/20 07:01:13 PM | Valid: [ 9/100] Step 050/097 Loss 1.031 Prec@(1,5) (64.2%, 96.4%)
11/20 07:02:35 PM | Valid: [ 9/100] Step 097/097 Loss 1.029 Prec@(1,5) (64.0%, 96.6%)
11/20 07:02:35 PM | Valid: [ 9/100] Final Prec@1 64.0000%
11/20 07:02:35 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2222, 0.0566, 0.0994, 0.1045, 0.1372, 0.1066, 0.1414, 0.1321],
        [0.1185, 0.0575, 0.0917, 0.1810, 0.1206, 0.1483, 0.1010, 0.1814]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1516, 0.0714, 0.1131, 0.1414, 0.1220, 0.1115, 0.1298, 0.1592],
        [0.1253, 0.0714, 0.1023, 0.1144, 0.1537, 0.1418, 0.1315, 0.1595],
        [0.0903, 0.0594, 0.1032, 0.1161, 0.1397, 0.1419, 0.1649, 0.1846]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1602, 0.0764, 0.1058, 0.1459, 0.1328, 0.1189, 0.1084, 0.1516],
        [0.1136, 0.0713, 0.0926, 0.2039, 0.1262, 0.1239, 0.1211, 0.1474],
        [0.0969, 0.0633, 0.1019, 0.1330, 0.1471, 0.1187, 0.1415, 0.1975],
        [0.0763, 0.0521, 0.0752, 0.1426, 0.1761, 0.1411, 0.1346, 0.2021]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1490, 0.0819, 0.1109, 0.1264, 0.1246, 0.1137, 0.1340, 0.1594],
        [0.1257, 0.0823, 0.1064, 0.1322, 0.1299, 0.1171, 0.1264, 0.1800],
        [0.1006, 0.0671, 0.1070, 0.1284, 0.1452, 0.1234, 0.1231, 0.2052],
        [0.0800, 0.0553, 0.0806, 0.1538, 0.1363, 0.1271, 0.1466, 0.2203],
        [0.0654, 0.0495, 0.0633, 0.1281, 0.1620, 0.1551, 0.1614, 0.2151]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2481, 0.1063, 0.0999, 0.1119, 0.1258, 0.1070, 0.1091, 0.0919],
        [0.1136, 0.0949, 0.1195, 0.1292, 0.1277, 0.1269, 0.1197, 0.1684]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2080, 0.1192, 0.1101, 0.1176, 0.1194, 0.1118, 0.1068, 0.1072],
        [0.1145, 0.1018, 0.1382, 0.1223, 0.1198, 0.1321, 0.1231, 0.1482],
        [0.1381, 0.0868, 0.1168, 0.1280, 0.1457, 0.1233, 0.1420, 0.1195]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1782, 0.1185, 0.1143, 0.1173, 0.1257, 0.1144, 0.1178, 0.1137],
        [0.1163, 0.1067, 0.1250, 0.1239, 0.1382, 0.1242, 0.1268, 0.1388],
        [0.1285, 0.0898, 0.1161, 0.1091, 0.1527, 0.1304, 0.1511, 0.1223],
        [0.1225, 0.0948, 0.1192, 0.1305, 0.1337, 0.1314, 0.1409, 0.1269]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1747, 0.1176, 0.1225, 0.1209, 0.1330, 0.1121, 0.1091, 0.1099],
        [0.1152, 0.1056, 0.1226, 0.1222, 0.1261, 0.1322, 0.1395, 0.1367],
        [0.1466, 0.0976, 0.1240, 0.1191, 0.1305, 0.1223, 0.1360, 0.1239],
        [0.1369, 0.0998, 0.1246, 0.1251, 0.1297, 0.1164, 0.1447, 0.1228],
        [0.1302, 0.1030, 0.1260, 0.1145, 0.1397, 0.1286, 0.1328, 0.1252]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 07:02:54 PM | Train: [10/100] Step 000/097 Loss 0.941 Prec@(1,5) (64.1%, 98.4%)
11/20 07:13:48 PM | Train: [10/100] Step 050/097 Loss 0.953 Prec@(1,5) (65.9%, 97.0%)
11/20 07:24:01 PM | Train: [10/100] Step 097/097 Loss 0.958 Prec@(1,5) (66.2%, 96.9%)
11/20 07:26:40 PM | Train: [10/100] Final Prec@1 66.2400%
11/20 07:26:43 PM | Valid: [10/100] Step 000/097 Loss 0.968 Prec@(1,5) (70.3%, 98.4%)
11/20 07:28:10 PM | Valid: [10/100] Step 050/097 Loss 0.947 Prec@(1,5) (66.7%, 97.1%)
11/20 07:29:33 PM | Valid: [10/100] Step 097/097 Loss 0.942 Prec@(1,5) (67.0%, 97.0%)
11/20 07:29:33 PM | Valid: [10/100] Final Prec@1 66.9600%
11/20 07:29:33 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2330, 0.0553, 0.1008, 0.1087, 0.1355, 0.1038, 0.1312, 0.1318],
        [0.1163, 0.0559, 0.0915, 0.1907, 0.1242, 0.1471, 0.0972, 0.1771]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1562, 0.0712, 0.1161, 0.1369, 0.1220, 0.1103, 0.1267, 0.1607],
        [0.1265, 0.0708, 0.1033, 0.1224, 0.1544, 0.1333, 0.1286, 0.1608],
        [0.0892, 0.0580, 0.1030, 0.1181, 0.1385, 0.1431, 0.1626, 0.1876]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1620, 0.0751, 0.1053, 0.1462, 0.1362, 0.1174, 0.1055, 0.1523],
        [0.1095, 0.0689, 0.0902, 0.2222, 0.1253, 0.1231, 0.1162, 0.1444],
        [0.0959, 0.0614, 0.1008, 0.1402, 0.1420, 0.1172, 0.1401, 0.2023],
        [0.0723, 0.0496, 0.0724, 0.1407, 0.1875, 0.1384, 0.1315, 0.2077]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1569, 0.0828, 0.1144, 0.1244, 0.1210, 0.1092, 0.1285, 0.1628],
        [0.1296, 0.0829, 0.1072, 0.1332, 0.1254, 0.1179, 0.1230, 0.1807],
        [0.1030, 0.0665, 0.1078, 0.1257, 0.1387, 0.1262, 0.1207, 0.2113],
        [0.0783, 0.0538, 0.0789, 0.1584, 0.1430, 0.1233, 0.1404, 0.2239],
        [0.0644, 0.0487, 0.0624, 0.1244, 0.1608, 0.1553, 0.1590, 0.2249]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2453, 0.1028, 0.0971, 0.1146, 0.1366, 0.1042, 0.1094, 0.0900],
        [0.1169, 0.0948, 0.1142, 0.1202, 0.1322, 0.1276, 0.1206, 0.1734]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2069, 0.1178, 0.1125, 0.1212, 0.1220, 0.1095, 0.1043, 0.1058],
        [0.1170, 0.1026, 0.1343, 0.1221, 0.1218, 0.1301, 0.1215, 0.1505],
        [0.1388, 0.0846, 0.1164, 0.1304, 0.1465, 0.1203, 0.1448, 0.1182]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1796, 0.1175, 0.1149, 0.1160, 0.1250, 0.1139, 0.1199, 0.1131],
        [0.1176, 0.1066, 0.1257, 0.1243, 0.1371, 0.1224, 0.1254, 0.1408],
        [0.1295, 0.0888, 0.1165, 0.1082, 0.1550, 0.1282, 0.1508, 0.1230],
        [0.1231, 0.0928, 0.1185, 0.1314, 0.1329, 0.1310, 0.1444, 0.1260]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1743, 0.1159, 0.1224, 0.1212, 0.1361, 0.1115, 0.1093, 0.1092],
        [0.1152, 0.1049, 0.1237, 0.1203, 0.1228, 0.1346, 0.1401, 0.1385],
        [0.1472, 0.0956, 0.1235, 0.1216, 0.1286, 0.1198, 0.1394, 0.1243],
        [0.1367, 0.0975, 0.1238, 0.1239, 0.1298, 0.1169, 0.1496, 0.1219],
        [0.1286, 0.1001, 0.1229, 0.1119, 0.1431, 0.1304, 0.1375, 0.1255]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 07:29:50 PM | Train: [11/100] Step 000/097 Loss 0.933 Prec@(1,5) (64.1%, 96.9%)
11/20 07:40:32 PM | Train: [11/100] Step 050/097 Loss 0.884 Prec@(1,5) (69.1%, 97.4%)
11/20 07:50:36 PM | Train: [11/100] Step 097/097 Loss 0.893 Prec@(1,5) (69.0%, 97.2%)
11/20 07:53:27 PM | Train: [11/100] Final Prec@1 68.9920%
11/20 07:53:29 PM | Valid: [11/100] Step 000/097 Loss 0.859 Prec@(1,5) (64.1%, 98.4%)
11/20 07:54:56 PM | Valid: [11/100] Step 050/097 Loss 0.892 Prec@(1,5) (69.1%, 97.2%)
11/20 07:56:17 PM | Valid: [11/100] Step 097/097 Loss 0.876 Prec@(1,5) (69.4%, 97.5%)
11/20 07:56:17 PM | Valid: [11/100] Final Prec@1 69.3760%
11/20 07:56:17 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2333, 0.0534, 0.0990, 0.1112, 0.1328, 0.1058, 0.1364, 0.1281],
        [0.1118, 0.0536, 0.0883, 0.2083, 0.1204, 0.1489, 0.0960, 0.1727]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1522, 0.0691, 0.1133, 0.1474, 0.1229, 0.1051, 0.1299, 0.1600],
        [0.1293, 0.0703, 0.1033, 0.1258, 0.1559, 0.1260, 0.1297, 0.1598],
        [0.0901, 0.0573, 0.1028, 0.1180, 0.1418, 0.1432, 0.1651, 0.1816]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1624, 0.0740, 0.1047, 0.1559, 0.1329, 0.1161, 0.1027, 0.1514],
        [0.1049, 0.0652, 0.0853, 0.2541, 0.1216, 0.1167, 0.1142, 0.1380],
        [0.0975, 0.0607, 0.1005, 0.1426, 0.1441, 0.1159, 0.1356, 0.2032],
        [0.0731, 0.0490, 0.0716, 0.1387, 0.1857, 0.1444, 0.1325, 0.2050]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1582, 0.0814, 0.1130, 0.1247, 0.1214, 0.1094, 0.1304, 0.1616],
        [0.1281, 0.0811, 0.1061, 0.1311, 0.1299, 0.1164, 0.1245, 0.1828],
        [0.1053, 0.0659, 0.1079, 0.1306, 0.1333, 0.1236, 0.1206, 0.2128],
        [0.0800, 0.0533, 0.0781, 0.1534, 0.1444, 0.1269, 0.1382, 0.2258],
        [0.0648, 0.0486, 0.0619, 0.1220, 0.1623, 0.1510, 0.1623, 0.2271]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2579, 0.0989, 0.0938, 0.1142, 0.1310, 0.1030, 0.1133, 0.0879],
        [0.1161, 0.0926, 0.1119, 0.1204, 0.1346, 0.1293, 0.1169, 0.1782]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2173, 0.1177, 0.1124, 0.1191, 0.1229, 0.1052, 0.1018, 0.1036],
        [0.1181, 0.1023, 0.1318, 0.1203, 0.1218, 0.1292, 0.1245, 0.1520],
        [0.1442, 0.0832, 0.1170, 0.1293, 0.1510, 0.1165, 0.1405, 0.1183]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1822, 0.1164, 0.1131, 0.1186, 0.1261, 0.1115, 0.1201, 0.1120],
        [0.1179, 0.1059, 0.1255, 0.1232, 0.1390, 0.1238, 0.1223, 0.1424],
        [0.1316, 0.0865, 0.1151, 0.1105, 0.1594, 0.1264, 0.1485, 0.1220],
        [0.1241, 0.0905, 0.1173, 0.1315, 0.1384, 0.1273, 0.1451, 0.1258]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1778, 0.1159, 0.1222, 0.1222, 0.1350, 0.1103, 0.1083, 0.1083],
        [0.1152, 0.1035, 0.1238, 0.1214, 0.1244, 0.1313, 0.1403, 0.1401],
        [0.1505, 0.0931, 0.1224, 0.1230, 0.1271, 0.1211, 0.1386, 0.1242],
        [0.1381, 0.0949, 0.1228, 0.1242, 0.1317, 0.1173, 0.1495, 0.1216],
        [0.1299, 0.0989, 0.1230, 0.1118, 0.1438, 0.1317, 0.1356, 0.1253]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 07:56:35 PM | Train: [12/100] Step 000/097 Loss 0.900 Prec@(1,5) (68.8%, 98.4%)
11/20 08:07:26 PM | Train: [12/100] Step 050/097 Loss 0.852 Prec@(1,5) (69.3%, 98.0%)
11/20 08:17:33 PM | Train: [12/100] Step 097/097 Loss 0.848 Prec@(1,5) (70.0%, 97.8%)
11/20 08:20:08 PM | Train: [12/100] Final Prec@1 69.9840%
11/20 08:20:10 PM | Valid: [12/100] Step 000/097 Loss 0.856 Prec@(1,5) (73.4%, 95.3%)
11/20 08:21:37 PM | Valid: [12/100] Step 050/097 Loss 0.838 Prec@(1,5) (70.2%, 97.9%)
11/20 08:22:58 PM | Valid: [12/100] Step 097/097 Loss 0.844 Prec@(1,5) (70.0%, 97.9%)
11/20 08:22:58 PM | Valid: [12/100] Final Prec@1 69.9520%
11/20 08:22:58 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('sep_conv_3x3', 3)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2574, 0.0522, 0.0974, 0.1054, 0.1393, 0.1012, 0.1231, 0.1241],
        [0.1133, 0.0528, 0.0884, 0.2083, 0.1200, 0.1449, 0.0963, 0.1761]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1591, 0.0699, 0.1159, 0.1422, 0.1256, 0.1017, 0.1261, 0.1595],
        [0.1304, 0.0696, 0.1026, 0.1285, 0.1532, 0.1224, 0.1293, 0.1640],
        [0.0936, 0.0568, 0.1030, 0.1203, 0.1453, 0.1387, 0.1605, 0.1817]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1674, 0.0731, 0.1038, 0.1546, 0.1348, 0.1132, 0.1023, 0.1506],
        [0.1059, 0.0648, 0.0850, 0.2503, 0.1225, 0.1155, 0.1172, 0.1390],
        [0.0999, 0.0596, 0.0994, 0.1408, 0.1398, 0.1169, 0.1379, 0.2057],
        [0.0712, 0.0477, 0.0699, 0.1370, 0.1884, 0.1467, 0.1385, 0.2006]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1637, 0.0814, 0.1147, 0.1251, 0.1165, 0.1082, 0.1286, 0.1617],
        [0.1321, 0.0807, 0.1074, 0.1308, 0.1285, 0.1159, 0.1190, 0.1857],
        [0.1079, 0.0649, 0.1063, 0.1278, 0.1384, 0.1185, 0.1203, 0.2158],
        [0.0800, 0.0524, 0.0767, 0.1530, 0.1419, 0.1275, 0.1421, 0.2264],
        [0.0651, 0.0485, 0.0618, 0.1218, 0.1688, 0.1470, 0.1597, 0.2273]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2547, 0.0951, 0.0917, 0.1193, 0.1342, 0.1022, 0.1154, 0.0875],
        [0.1160, 0.0913, 0.1126, 0.1177, 0.1358, 0.1259, 0.1196, 0.1811]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2199, 0.1160, 0.1093, 0.1190, 0.1230, 0.1073, 0.1016, 0.1039],
        [0.1197, 0.1016, 0.1292, 0.1191, 0.1239, 0.1296, 0.1238, 0.1531],
        [0.1478, 0.0805, 0.1154, 0.1337, 0.1489, 0.1151, 0.1425, 0.1160]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1780, 0.1143, 0.1141, 0.1214, 0.1285, 0.1114, 0.1197, 0.1125],
        [0.1178, 0.1044, 0.1253, 0.1268, 0.1401, 0.1216, 0.1220, 0.1419],
        [0.1313, 0.0840, 0.1131, 0.1098, 0.1683, 0.1253, 0.1484, 0.1198],
        [0.1254, 0.0885, 0.1162, 0.1328, 0.1370, 0.1280, 0.1466, 0.1255]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1761, 0.1145, 0.1201, 0.1233, 0.1378, 0.1093, 0.1097, 0.1092],
        [0.1153, 0.1030, 0.1247, 0.1227, 0.1248, 0.1304, 0.1386, 0.1404],
        [0.1540, 0.0909, 0.1219, 0.1231, 0.1271, 0.1201, 0.1382, 0.1246],
        [0.1404, 0.0931, 0.1226, 0.1220, 0.1340, 0.1169, 0.1487, 0.1223],
        [0.1334, 0.0980, 0.1231, 0.1099, 0.1458, 0.1326, 0.1336, 0.1237]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 08:23:16 PM | Train: [13/100] Step 000/097 Loss 0.778 Prec@(1,5) (70.3%, 100.0%)
11/20 08:34:06 PM | Train: [13/100] Step 050/097 Loss 0.839 Prec@(1,5) (70.4%, 98.1%)
11/20 08:44:06 PM | Train: [13/100] Step 097/097 Loss 0.846 Prec@(1,5) (69.6%, 97.9%)
11/20 08:47:28 PM | Train: [13/100] Final Prec@1 69.6000%
11/20 08:47:30 PM | Valid: [13/100] Step 000/097 Loss 0.741 Prec@(1,5) (70.3%, 95.3%)
11/20 08:48:56 PM | Valid: [13/100] Step 050/097 Loss 0.835 Prec@(1,5) (70.9%, 97.8%)
11/20 08:50:17 PM | Valid: [13/100] Step 097/097 Loss 0.819 Prec@(1,5) (71.1%, 97.9%)
11/20 08:50:17 PM | Valid: [13/100] Final Prec@1 71.1040%
11/20 08:50:17 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2513, 0.0507, 0.0948, 0.1050, 0.1422, 0.1006, 0.1323, 0.1230],
        [0.1063, 0.0507, 0.0855, 0.2186, 0.1207, 0.1514, 0.0931, 0.1738]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1604, 0.0683, 0.1158, 0.1379, 0.1266, 0.1013, 0.1264, 0.1633],
        [0.1337, 0.0690, 0.1035, 0.1248, 0.1585, 0.1212, 0.1276, 0.1618],
        [0.0983, 0.0568, 0.1031, 0.1160, 0.1428, 0.1384, 0.1652, 0.1794]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1659, 0.0709, 0.1009, 0.1583, 0.1383, 0.1140, 0.1003, 0.1513],
        [0.1051, 0.0642, 0.0843, 0.2601, 0.1220, 0.1145, 0.1122, 0.1375],
        [0.1033, 0.0596, 0.0996, 0.1319, 0.1422, 0.1204, 0.1349, 0.2080],
        [0.0710, 0.0472, 0.0700, 0.1361, 0.1878, 0.1421, 0.1392, 0.2065]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1650, 0.0796, 0.1118, 0.1245, 0.1175, 0.1092, 0.1286, 0.1638],
        [0.1318, 0.0802, 0.1072, 0.1297, 0.1323, 0.1153, 0.1173, 0.1861],
        [0.1081, 0.0639, 0.1048, 0.1251, 0.1389, 0.1144, 0.1279, 0.2170],
        [0.0787, 0.0516, 0.0759, 0.1533, 0.1443, 0.1279, 0.1411, 0.2271],
        [0.0631, 0.0477, 0.0603, 0.1230, 0.1720, 0.1470, 0.1569, 0.2300]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2691, 0.0959, 0.0908, 0.1169, 0.1251, 0.0985, 0.1179, 0.0858],
        [0.1158, 0.0911, 0.1111, 0.1186, 0.1379, 0.1223, 0.1190, 0.1842]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2231, 0.1160, 0.1074, 0.1182, 0.1248, 0.1065, 0.1008, 0.1031],
        [0.1200, 0.1008, 0.1288, 0.1152, 0.1238, 0.1298, 0.1261, 0.1555],
        [0.1456, 0.0784, 0.1137, 0.1363, 0.1501, 0.1160, 0.1450, 0.1150]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1808, 0.1155, 0.1157, 0.1191, 0.1269, 0.1100, 0.1199, 0.1121],
        [0.1180, 0.1039, 0.1256, 0.1270, 0.1407, 0.1194, 0.1233, 0.1420],
        [0.1304, 0.0822, 0.1124, 0.1094, 0.1690, 0.1266, 0.1500, 0.1201],
        [0.1243, 0.0874, 0.1158, 0.1347, 0.1384, 0.1277, 0.1473, 0.1243]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1779, 0.1156, 0.1185, 0.1222, 0.1358, 0.1097, 0.1114, 0.1089],
        [0.1150, 0.1022, 0.1243, 0.1232, 0.1242, 0.1329, 0.1376, 0.1407],
        [0.1510, 0.0884, 0.1208, 0.1242, 0.1297, 0.1193, 0.1416, 0.1250],
        [0.1382, 0.0910, 0.1223, 0.1231, 0.1351, 0.1190, 0.1480, 0.1233],
        [0.1311, 0.0947, 0.1202, 0.1116, 0.1500, 0.1324, 0.1365, 0.1235]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 08:50:35 PM | Train: [14/100] Step 000/097 Loss 0.590 Prec@(1,5) (85.9%, 96.9%)
11/20 09:01:16 PM | Train: [14/100] Step 050/097 Loss 0.773 Prec@(1,5) (72.9%, 98.1%)
11/20 09:11:21 PM | Train: [14/100] Step 097/097 Loss 0.792 Prec@(1,5) (72.4%, 97.9%)
11/20 09:14:01 PM | Train: [14/100] Final Prec@1 72.3520%
11/20 09:14:03 PM | Valid: [14/100] Step 000/097 Loss 0.713 Prec@(1,5) (73.4%, 98.4%)
11/20 09:15:30 PM | Valid: [14/100] Step 050/097 Loss 0.843 Prec@(1,5) (69.9%, 97.9%)
11/20 09:16:52 PM | Valid: [14/100] Step 097/097 Loss 0.828 Prec@(1,5) (70.1%, 97.9%)
11/20 09:16:52 PM | Valid: [14/100] Final Prec@1 70.1280%
11/20 09:16:52 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2685, 0.0494, 0.0936, 0.1095, 0.1428, 0.0941, 0.1233, 0.1189],
        [0.1075, 0.0502, 0.0854, 0.2158, 0.1222, 0.1492, 0.0950, 0.1747]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1657, 0.0677, 0.1149, 0.1401, 0.1303, 0.1001, 0.1224, 0.1587],
        [0.1295, 0.0666, 0.0993, 0.1331, 0.1593, 0.1226, 0.1251, 0.1644],
        [0.1014, 0.0568, 0.1035, 0.1184, 0.1440, 0.1372, 0.1602, 0.1785]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1737, 0.0705, 0.1003, 0.1552, 0.1408, 0.1103, 0.0982, 0.1509],
        [0.1053, 0.0628, 0.0823, 0.2700, 0.1227, 0.1117, 0.1097, 0.1354],
        [0.1073, 0.0597, 0.0992, 0.1349, 0.1434, 0.1164, 0.1322, 0.2070],
        [0.0722, 0.0473, 0.0701, 0.1359, 0.1880, 0.1403, 0.1361, 0.2101]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1685, 0.0799, 0.1106, 0.1243, 0.1213, 0.1070, 0.1263, 0.1622],
        [0.1303, 0.0797, 0.1061, 0.1306, 0.1357, 0.1162, 0.1133, 0.1881],
        [0.1104, 0.0637, 0.1044, 0.1276, 0.1346, 0.1133, 0.1245, 0.2216],
        [0.0793, 0.0516, 0.0754, 0.1540, 0.1431, 0.1243, 0.1430, 0.2293],
        [0.0637, 0.0476, 0.0598, 0.1236, 0.1716, 0.1434, 0.1490, 0.2413]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2795, 0.0946, 0.0910, 0.1140, 0.1237, 0.0959, 0.1170, 0.0843],
        [0.1191, 0.0903, 0.1120, 0.1158, 0.1354, 0.1216, 0.1188, 0.1869]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2275, 0.1162, 0.1082, 0.1166, 0.1223, 0.1071, 0.1000, 0.1022],
        [0.1219, 0.1003, 0.1273, 0.1139, 0.1239, 0.1310, 0.1250, 0.1567],
        [0.1509, 0.0778, 0.1140, 0.1326, 0.1529, 0.1160, 0.1405, 0.1153]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1834, 0.1153, 0.1151, 0.1178, 0.1300, 0.1095, 0.1181, 0.1109],
        [0.1200, 0.1040, 0.1256, 0.1265, 0.1409, 0.1199, 0.1210, 0.1422],
        [0.1318, 0.0806, 0.1107, 0.1100, 0.1753, 0.1228, 0.1506, 0.1181],
        [0.1258, 0.0866, 0.1158, 0.1366, 0.1376, 0.1254, 0.1474, 0.1249]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1833, 0.1170, 0.1187, 0.1225, 0.1341, 0.1076, 0.1089, 0.1077],
        [0.1179, 0.1030, 0.1247, 0.1211, 0.1244, 0.1332, 0.1336, 0.1421],
        [0.1571, 0.0886, 0.1221, 0.1216, 0.1307, 0.1192, 0.1350, 0.1257],
        [0.1407, 0.0908, 0.1227, 0.1216, 0.1348, 0.1172, 0.1484, 0.1238],
        [0.1356, 0.0955, 0.1226, 0.1120, 0.1472, 0.1284, 0.1348, 0.1239]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 09:17:09 PM | Train: [15/100] Step 000/097 Loss 0.729 Prec@(1,5) (79.7%, 98.4%)
11/20 09:27:53 PM | Train: [15/100] Step 050/097 Loss 0.767 Prec@(1,5) (73.2%, 97.8%)
11/20 09:37:55 PM | Train: [15/100] Step 097/097 Loss 0.760 Prec@(1,5) (73.4%, 97.8%)
11/20 09:40:52 PM | Train: [15/100] Final Prec@1 73.3600%
11/20 09:40:55 PM | Valid: [15/100] Step 000/097 Loss 0.686 Prec@(1,5) (79.7%, 95.3%)
11/20 09:42:22 PM | Valid: [15/100] Step 050/097 Loss 0.774 Prec@(1,5) (73.0%, 98.3%)
11/20 09:43:44 PM | Valid: [15/100] Step 097/097 Loss 0.768 Prec@(1,5) (73.1%, 98.2%)
11/20 09:43:44 PM | Valid: [15/100] Final Prec@1 73.0720%
11/20 09:43:44 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2792, 0.0490, 0.0947, 0.1078, 0.1399, 0.0944, 0.1170, 0.1180],
        [0.1089, 0.0504, 0.0856, 0.2249, 0.1187, 0.1462, 0.0966, 0.1687]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1663, 0.0669, 0.1145, 0.1364, 0.1328, 0.0983, 0.1221, 0.1626],
        [0.1333, 0.0665, 0.0992, 0.1353, 0.1579, 0.1232, 0.1244, 0.1601],
        [0.1030, 0.0562, 0.1022, 0.1215, 0.1413, 0.1347, 0.1641, 0.1770]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1707, 0.0694, 0.0992, 0.1615, 0.1460, 0.1097, 0.0957, 0.1479],
        [0.1061, 0.0625, 0.0817, 0.2834, 0.1216, 0.1044, 0.1080, 0.1322],
        [0.1104, 0.0602, 0.0993, 0.1374, 0.1413, 0.1141, 0.1313, 0.2061],
        [0.0726, 0.0474, 0.0701, 0.1354, 0.1913, 0.1378, 0.1369, 0.2085]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1690, 0.0796, 0.1115, 0.1190, 0.1241, 0.1092, 0.1240, 0.1635],
        [0.1309, 0.0797, 0.1054, 0.1297, 0.1377, 0.1141, 0.1131, 0.1895],
        [0.1105, 0.0634, 0.1032, 0.1250, 0.1387, 0.1116, 0.1268, 0.2208],
        [0.0792, 0.0514, 0.0749, 0.1481, 0.1434, 0.1217, 0.1433, 0.2380],
        [0.0649, 0.0481, 0.0602, 0.1230, 0.1662, 0.1430, 0.1487, 0.2460]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2837, 0.0938, 0.0904, 0.1194, 0.1231, 0.0962, 0.1094, 0.0840],
        [0.1179, 0.0903, 0.1122, 0.1208, 0.1337, 0.1206, 0.1175, 0.1870]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2308, 0.1157, 0.1100, 0.1157, 0.1196, 0.1068, 0.0992, 0.1022],
        [0.1196, 0.0989, 0.1285, 0.1134, 0.1242, 0.1325, 0.1269, 0.1560],
        [0.1502, 0.0768, 0.1127, 0.1319, 0.1522, 0.1179, 0.1441, 0.1142]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1853, 0.1153, 0.1140, 0.1194, 0.1293, 0.1088, 0.1165, 0.1113],
        [0.1185, 0.1032, 0.1273, 0.1258, 0.1447, 0.1185, 0.1201, 0.1419],
        [0.1321, 0.0800, 0.1100, 0.1111, 0.1752, 0.1228, 0.1506, 0.1182],
        [0.1283, 0.0858, 0.1149, 0.1341, 0.1396, 0.1258, 0.1473, 0.1241]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1824, 0.1159, 0.1204, 0.1233, 0.1337, 0.1080, 0.1087, 0.1077],
        [0.1158, 0.1012, 0.1267, 0.1220, 0.1240, 0.1336, 0.1352, 0.1415],
        [0.1560, 0.0873, 0.1205, 0.1216, 0.1339, 0.1185, 0.1355, 0.1266],
        [0.1430, 0.0892, 0.1200, 0.1209, 0.1349, 0.1181, 0.1510, 0.1228],
        [0.1366, 0.0944, 0.1205, 0.1094, 0.1531, 0.1268, 0.1357, 0.1235]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 09:44:02 PM | Train: [16/100] Step 000/097 Loss 0.590 Prec@(1,5) (73.4%, 100.0%)
11/20 09:54:47 PM | Train: [16/100] Step 050/097 Loss 0.717 Prec@(1,5) (75.0%, 98.6%)
11/20 10:04:52 PM | Train: [16/100] Step 097/097 Loss 0.715 Prec@(1,5) (75.0%, 98.5%)
11/20 10:08:00 PM | Train: [16/100] Final Prec@1 74.9760%
11/20 10:08:03 PM | Valid: [16/100] Step 000/097 Loss 0.786 Prec@(1,5) (75.0%, 98.4%)
11/20 10:09:29 PM | Valid: [16/100] Step 050/097 Loss 0.772 Prec@(1,5) (73.9%, 98.0%)
11/20 10:10:50 PM | Valid: [16/100] Step 097/097 Loss 0.780 Prec@(1,5) (73.2%, 98.0%)
11/20 10:10:50 PM | Valid: [16/100] Final Prec@1 73.2160%
11/20 10:10:50 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2795, 0.0481, 0.0929, 0.1147, 0.1369, 0.0956, 0.1174, 0.1149],
        [0.1044, 0.0492, 0.0840, 0.2371, 0.1163, 0.1420, 0.0974, 0.1695]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1720, 0.0662, 0.1148, 0.1339, 0.1312, 0.1007, 0.1233, 0.1579],
        [0.1335, 0.0661, 0.0991, 0.1403, 0.1569, 0.1208, 0.1240, 0.1595],
        [0.1049, 0.0556, 0.1010, 0.1166, 0.1430, 0.1288, 0.1748, 0.1753]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1720, 0.0694, 0.1005, 0.1570, 0.1521, 0.1083, 0.0937, 0.1471],
        [0.1061, 0.0626, 0.0822, 0.2742, 0.1240, 0.1063, 0.1114, 0.1331],
        [0.1126, 0.0599, 0.0985, 0.1386, 0.1473, 0.1084, 0.1315, 0.2031],
        [0.0730, 0.0476, 0.0703, 0.1350, 0.1937, 0.1331, 0.1391, 0.2081]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1753, 0.0801, 0.1129, 0.1228, 0.1243, 0.1026, 0.1210, 0.1610],
        [0.1303, 0.0797, 0.1058, 0.1280, 0.1398, 0.1144, 0.1123, 0.1897],
        [0.1122, 0.0637, 0.1031, 0.1214, 0.1407, 0.1071, 0.1291, 0.2227],
        [0.0804, 0.0520, 0.0752, 0.1422, 0.1496, 0.1210, 0.1428, 0.2367],
        [0.0653, 0.0488, 0.0607, 0.1255, 0.1654, 0.1389, 0.1460, 0.2494]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.2952, 0.0935, 0.0870, 0.1144, 0.1249, 0.0944, 0.1075, 0.0832],
        [0.1134, 0.0872, 0.1142, 0.1262, 0.1305, 0.1215, 0.1209, 0.1861]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2307, 0.1152, 0.1103, 0.1161, 0.1225, 0.1062, 0.0975, 0.1015],
        [0.1183, 0.0981, 0.1284, 0.1140, 0.1228, 0.1344, 0.1270, 0.1570],
        [0.1493, 0.0756, 0.1123, 0.1311, 0.1539, 0.1144, 0.1493, 0.1140]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1827, 0.1158, 0.1143, 0.1195, 0.1286, 0.1095, 0.1178, 0.1118],
        [0.1180, 0.1034, 0.1272, 0.1246, 0.1421, 0.1196, 0.1221, 0.1429],
        [0.1312, 0.0788, 0.1087, 0.1122, 0.1755, 0.1254, 0.1505, 0.1177],
        [0.1294, 0.0850, 0.1145, 0.1326, 0.1424, 0.1239, 0.1494, 0.1228]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1833, 0.1164, 0.1205, 0.1214, 0.1350, 0.1076, 0.1083, 0.1073],
        [0.1148, 0.1008, 0.1274, 0.1218, 0.1254, 0.1313, 0.1357, 0.1428],
        [0.1538, 0.0855, 0.1194, 0.1222, 0.1338, 0.1192, 0.1398, 0.1265],
        [0.1449, 0.0876, 0.1191, 0.1200, 0.1352, 0.1174, 0.1531, 0.1227],
        [0.1357, 0.0925, 0.1187, 0.1095, 0.1516, 0.1283, 0.1409, 0.1228]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 10:11:08 PM | Train: [17/100] Step 000/097 Loss 0.545 Prec@(1,5) (82.8%, 100.0%)
11/20 10:21:49 PM | Train: [17/100] Step 050/097 Loss 0.671 Prec@(1,5) (76.8%, 98.9%)
11/20 10:31:54 PM | Train: [17/100] Step 097/097 Loss 0.689 Prec@(1,5) (76.2%, 98.6%)
11/20 10:35:06 PM | Train: [17/100] Final Prec@1 76.2400%
11/20 10:35:08 PM | Valid: [17/100] Step 000/097 Loss 0.724 Prec@(1,5) (75.0%, 95.3%)
11/20 10:36:35 PM | Valid: [17/100] Step 050/097 Loss 0.739 Prec@(1,5) (74.6%, 97.9%)
11/20 10:37:56 PM | Valid: [17/100] Step 097/097 Loss 0.735 Prec@(1,5) (74.6%, 98.0%)
11/20 10:37:56 PM | Valid: [17/100] Final Prec@1 74.6240%
11/20 10:37:56 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2809, 0.0475, 0.0923, 0.1230, 0.1379, 0.0904, 0.1150, 0.1129],
        [0.1080, 0.0508, 0.0862, 0.2099, 0.1176, 0.1468, 0.1051, 0.1755]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1700, 0.0655, 0.1148, 0.1357, 0.1350, 0.0963, 0.1240, 0.1588],
        [0.1336, 0.0660, 0.0990, 0.1434, 0.1553, 0.1217, 0.1228, 0.1582],
        [0.1071, 0.0552, 0.1005, 0.1152, 0.1483, 0.1261, 0.1702, 0.1774]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1734, 0.0695, 0.1013, 0.1608, 0.1488, 0.1074, 0.0928, 0.1459],
        [0.1025, 0.0615, 0.0800, 0.2901, 0.1202, 0.1044, 0.1124, 0.1291],
        [0.1147, 0.0600, 0.0983, 0.1382, 0.1415, 0.1115, 0.1273, 0.2085],
        [0.0748, 0.0480, 0.0710, 0.1356, 0.1821, 0.1276, 0.1402, 0.2207]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1722, 0.0796, 0.1114, 0.1230, 0.1233, 0.1044, 0.1237, 0.1624],
        [0.1291, 0.0803, 0.1039, 0.1326, 0.1338, 0.1131, 0.1149, 0.1923],
        [0.1120, 0.0628, 0.1007, 0.1174, 0.1482, 0.1100, 0.1241, 0.2248],
        [0.0796, 0.0515, 0.0734, 0.1450, 0.1474, 0.1204, 0.1433, 0.2394],
        [0.0643, 0.0481, 0.0591, 0.1212, 0.1645, 0.1349, 0.1570, 0.2510]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3029, 0.0915, 0.0852, 0.1154, 0.1226, 0.0925, 0.1074, 0.0826],
        [0.1123, 0.0866, 0.1143, 0.1308, 0.1329, 0.1199, 0.1163, 0.1869]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2280, 0.1117, 0.1101, 0.1182, 0.1234, 0.1078, 0.0992, 0.1016],
        [0.1183, 0.0975, 0.1281, 0.1135, 0.1237, 0.1357, 0.1253, 0.1579],
        [0.1516, 0.0744, 0.1113, 0.1309, 0.1567, 0.1135, 0.1489, 0.1128]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1844, 0.1146, 0.1147, 0.1202, 0.1274, 0.1101, 0.1170, 0.1116],
        [0.1184, 0.1030, 0.1284, 0.1244, 0.1433, 0.1189, 0.1192, 0.1443],
        [0.1335, 0.0784, 0.1086, 0.1104, 0.1733, 0.1268, 0.1521, 0.1170],
        [0.1319, 0.0838, 0.1134, 0.1335, 0.1467, 0.1233, 0.1455, 0.1219]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1849, 0.1152, 0.1194, 0.1239, 0.1341, 0.1070, 0.1078, 0.1077],
        [0.1145, 0.1001, 0.1272, 0.1233, 0.1261, 0.1311, 0.1348, 0.1429],
        [0.1567, 0.0845, 0.1186, 0.1227, 0.1340, 0.1190, 0.1384, 0.1260],
        [0.1490, 0.0864, 0.1176, 0.1178, 0.1346, 0.1155, 0.1572, 0.1219],
        [0.1372, 0.0912, 0.1170, 0.1092, 0.1534, 0.1287, 0.1409, 0.1224]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 10:38:14 PM | Train: [18/100] Step 000/097 Loss 0.767 Prec@(1,5) (75.0%, 98.4%)
11/20 10:49:05 PM | Train: [18/100] Step 050/097 Loss 0.685 Prec@(1,5) (76.4%, 98.6%)
11/20 10:59:10 PM | Train: [18/100] Step 097/097 Loss 0.687 Prec@(1,5) (76.1%, 98.6%)
11/20 11:02:02 PM | Train: [18/100] Final Prec@1 76.0640%
11/20 11:02:05 PM | Valid: [18/100] Step 000/097 Loss 0.604 Prec@(1,5) (81.2%, 98.4%)
11/20 11:03:32 PM | Valid: [18/100] Step 050/097 Loss 0.748 Prec@(1,5) (73.9%, 98.4%)
11/20 11:04:53 PM | Valid: [18/100] Step 097/097 Loss 0.743 Prec@(1,5) (74.1%, 98.3%)
11/20 11:04:53 PM | Valid: [18/100] Final Prec@1 74.1280%
11/20 11:04:53 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('dil_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2841, 0.0463, 0.0909, 0.1117, 0.1527, 0.0877, 0.1171, 0.1095],
        [0.1118, 0.0505, 0.0876, 0.2082, 0.1187, 0.1456, 0.0996, 0.1780]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1770, 0.0645, 0.1142, 0.1342, 0.1357, 0.0961, 0.1218, 0.1564],
        [0.1429, 0.0664, 0.1003, 0.1410, 0.1543, 0.1177, 0.1198, 0.1576],
        [0.1082, 0.0546, 0.1003, 0.1152, 0.1482, 0.1261, 0.1680, 0.1795]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1727, 0.0679, 0.1009, 0.1665, 0.1471, 0.1062, 0.0946, 0.1441],
        [0.1041, 0.0611, 0.0801, 0.2867, 0.1204, 0.1043, 0.1148, 0.1286],
        [0.1166, 0.0595, 0.0972, 0.1354, 0.1398, 0.1106, 0.1334, 0.2075],
        [0.0776, 0.0485, 0.0721, 0.1315, 0.1823, 0.1256, 0.1376, 0.2248]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1735, 0.0788, 0.1114, 0.1220, 0.1232, 0.1040, 0.1249, 0.1622],
        [0.1313, 0.0793, 0.1045, 0.1317, 0.1355, 0.1116, 0.1132, 0.1928],
        [0.1132, 0.0622, 0.1002, 0.1155, 0.1482, 0.1101, 0.1206, 0.2301],
        [0.0803, 0.0515, 0.0736, 0.1454, 0.1493, 0.1183, 0.1391, 0.2425],
        [0.0639, 0.0476, 0.0583, 0.1233, 0.1564, 0.1370, 0.1584, 0.2552]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3034, 0.0887, 0.0842, 0.1170, 0.1289, 0.0892, 0.1063, 0.0822],
        [0.1142, 0.0878, 0.1136, 0.1285, 0.1267, 0.1221, 0.1196, 0.1876]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2332, 0.1109, 0.1070, 0.1175, 0.1228, 0.1082, 0.0982, 0.1021],
        [0.1207, 0.0981, 0.1261, 0.1120, 0.1227, 0.1347, 0.1287, 0.1569],
        [0.1534, 0.0734, 0.1111, 0.1385, 0.1527, 0.1101, 0.1487, 0.1120]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1909, 0.1142, 0.1124, 0.1203, 0.1255, 0.1103, 0.1154, 0.1109],
        [0.1213, 0.1045, 0.1265, 0.1273, 0.1430, 0.1165, 0.1172, 0.1437],
        [0.1364, 0.0777, 0.1100, 0.1101, 0.1732, 0.1241, 0.1513, 0.1171],
        [0.1343, 0.0827, 0.1135, 0.1330, 0.1461, 0.1237, 0.1462, 0.1205]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1893, 0.1144, 0.1169, 0.1236, 0.1339, 0.1060, 0.1078, 0.1081],
        [0.1160, 0.1006, 0.1258, 0.1249, 0.1250, 0.1313, 0.1338, 0.1425],
        [0.1585, 0.0829, 0.1182, 0.1231, 0.1354, 0.1171, 0.1393, 0.1256],
        [0.1519, 0.0851, 0.1174, 0.1180, 0.1356, 0.1123, 0.1573, 0.1224],
        [0.1389, 0.0899, 0.1172, 0.1117, 0.1505, 0.1267, 0.1419, 0.1233]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 11:05:11 PM | Train: [19/100] Step 000/097 Loss 0.723 Prec@(1,5) (78.1%, 98.4%)
11/20 11:15:57 PM | Train: [19/100] Step 050/097 Loss 0.674 Prec@(1,5) (77.1%, 98.7%)
11/20 11:26:05 PM | Train: [19/100] Step 097/097 Loss 0.664 Prec@(1,5) (77.1%, 98.5%)
11/20 11:29:04 PM | Train: [19/100] Final Prec@1 77.0720%
11/20 11:29:07 PM | Valid: [19/100] Step 000/097 Loss 0.627 Prec@(1,5) (78.1%, 98.4%)
11/20 11:30:34 PM | Valid: [19/100] Step 050/097 Loss 0.687 Prec@(1,5) (76.3%, 98.3%)
11/20 11:31:55 PM | Valid: [19/100] Step 097/097 Loss 0.680 Prec@(1,5) (76.5%, 98.4%)
11/20 11:31:56 PM | Valid: [19/100] Final Prec@1 76.4960%
11/20 11:31:56 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2846, 0.0462, 0.0915, 0.1163, 0.1441, 0.0889, 0.1200, 0.1084],
        [0.1083, 0.0494, 0.0861, 0.2286, 0.1165, 0.1414, 0.0961, 0.1736]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1798, 0.0646, 0.1141, 0.1339, 0.1371, 0.0951, 0.1201, 0.1552],
        [0.1396, 0.0652, 0.0974, 0.1457, 0.1529, 0.1186, 0.1235, 0.1571],
        [0.1061, 0.0539, 0.0992, 0.1184, 0.1475, 0.1277, 0.1702, 0.1770]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1733, 0.0678, 0.1006, 0.1683, 0.1446, 0.1072, 0.0948, 0.1434],
        [0.1033, 0.0605, 0.0787, 0.2981, 0.1170, 0.1001, 0.1160, 0.1263],
        [0.1194, 0.0593, 0.0964, 0.1367, 0.1408, 0.1088, 0.1325, 0.2061],
        [0.0787, 0.0488, 0.0723, 0.1301, 0.1839, 0.1268, 0.1346, 0.2247]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1771, 0.0789, 0.1121, 0.1264, 0.1211, 0.1014, 0.1222, 0.1607],
        [0.1325, 0.0790, 0.1035, 0.1330, 0.1388, 0.1105, 0.1110, 0.1916],
        [0.1166, 0.0627, 0.1003, 0.1166, 0.1462, 0.1095, 0.1205, 0.2277],
        [0.0834, 0.0521, 0.0741, 0.1494, 0.1483, 0.1162, 0.1347, 0.2419],
        [0.0648, 0.0479, 0.0582, 0.1231, 0.1594, 0.1325, 0.1523, 0.2617]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3238, 0.0860, 0.0803, 0.1160, 0.1263, 0.0858, 0.1017, 0.0801],
        [0.1149, 0.0862, 0.1114, 0.1207, 0.1288, 0.1278, 0.1201, 0.1900]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2337, 0.1086, 0.1050, 0.1197, 0.1257, 0.1074, 0.0984, 0.1015],
        [0.1221, 0.0970, 0.1271, 0.1135, 0.1243, 0.1336, 0.1253, 0.1572],
        [0.1558, 0.0733, 0.1110, 0.1345, 0.1475, 0.1125, 0.1532, 0.1122]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1931, 0.1124, 0.1113, 0.1220, 0.1255, 0.1103, 0.1147, 0.1108],
        [0.1209, 0.1026, 0.1256, 0.1261, 0.1431, 0.1183, 0.1190, 0.1443],
        [0.1368, 0.0773, 0.1092, 0.1104, 0.1681, 0.1254, 0.1558, 0.1171],
        [0.1387, 0.0830, 0.1142, 0.1324, 0.1444, 0.1214, 0.1461, 0.1198]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1915, 0.1136, 0.1176, 0.1244, 0.1321, 0.1050, 0.1070, 0.1088],
        [0.1159, 0.0998, 0.1258, 0.1265, 0.1254, 0.1301, 0.1328, 0.1436],
        [0.1602, 0.0826, 0.1171, 0.1236, 0.1317, 0.1160, 0.1435, 0.1251],
        [0.1550, 0.0845, 0.1154, 0.1172, 0.1366, 0.1120, 0.1591, 0.1201],
        [0.1427, 0.0899, 0.1159, 0.1084, 0.1528, 0.1251, 0.1419, 0.1232]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 11:32:13 PM | Train: [20/100] Step 000/097 Loss 0.758 Prec@(1,5) (79.7%, 100.0%)
11/20 11:42:52 PM | Train: [20/100] Step 050/097 Loss 0.651 Prec@(1,5) (78.2%, 98.7%)
11/20 11:52:51 PM | Train: [20/100] Step 097/097 Loss 0.651 Prec@(1,5) (77.8%, 98.6%)
11/20 11:55:47 PM | Train: [20/100] Final Prec@1 77.7760%
11/20 11:55:49 PM | Valid: [20/100] Step 000/097 Loss 0.608 Prec@(1,5) (82.8%, 98.4%)
11/20 11:57:16 PM | Valid: [20/100] Step 050/097 Loss 0.698 Prec@(1,5) (75.0%, 98.5%)
11/20 11:58:37 PM | Valid: [20/100] Step 097/097 Loss 0.688 Prec@(1,5) (75.8%, 98.5%)
11/20 11:58:37 PM | Valid: [20/100] Final Prec@1 75.7920%
11/20 11:58:37 PM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2930, 0.0464, 0.0928, 0.1119, 0.1396, 0.0862, 0.1216, 0.1084],
        [0.1103, 0.0503, 0.0886, 0.2172, 0.1247, 0.1366, 0.1010, 0.1712]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1802, 0.0641, 0.1142, 0.1318, 0.1344, 0.0966, 0.1255, 0.1533],
        [0.1381, 0.0648, 0.0983, 0.1438, 0.1602, 0.1163, 0.1250, 0.1535],
        [0.1092, 0.0545, 0.1010, 0.1196, 0.1462, 0.1274, 0.1604, 0.1817]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1702, 0.0675, 0.1014, 0.1697, 0.1478, 0.1069, 0.0928, 0.1438],
        [0.1038, 0.0611, 0.0794, 0.2822, 0.1244, 0.1026, 0.1170, 0.1296],
        [0.1168, 0.0582, 0.0947, 0.1398, 0.1442, 0.1081, 0.1326, 0.2056],
        [0.0774, 0.0484, 0.0712, 0.1354, 0.1755, 0.1262, 0.1408, 0.2250]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1789, 0.0795, 0.1127, 0.1256, 0.1205, 0.1027, 0.1202, 0.1598],
        [0.1330, 0.0793, 0.1036, 0.1312, 0.1376, 0.1069, 0.1150, 0.1936],
        [0.1192, 0.0628, 0.1003, 0.1168, 0.1410, 0.1068, 0.1181, 0.2348],
        [0.0827, 0.0516, 0.0723, 0.1488, 0.1543, 0.1161, 0.1374, 0.2367],
        [0.0647, 0.0480, 0.0575, 0.1221, 0.1612, 0.1347, 0.1532, 0.2587]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3096, 0.0861, 0.0817, 0.1232, 0.1279, 0.0866, 0.1032, 0.0816],
        [0.1166, 0.0877, 0.1133, 0.1158, 0.1333, 0.1252, 0.1194, 0.1887]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2295, 0.1085, 0.1037, 0.1205, 0.1280, 0.1071, 0.0997, 0.1031],
        [0.1231, 0.0979, 0.1288, 0.1134, 0.1242, 0.1319, 0.1244, 0.1562],
        [0.1547, 0.0720, 0.1097, 0.1372, 0.1506, 0.1134, 0.1512, 0.1112]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1919, 0.1112, 0.1111, 0.1229, 0.1274, 0.1094, 0.1144, 0.1117],
        [0.1212, 0.1035, 0.1251, 0.1258, 0.1434, 0.1172, 0.1185, 0.1453],
        [0.1360, 0.0759, 0.1075, 0.1113, 0.1745, 0.1252, 0.1538, 0.1158],
        [0.1388, 0.0811, 0.1118, 0.1360, 0.1472, 0.1198, 0.1472, 0.1182]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1908, 0.1128, 0.1174, 0.1240, 0.1334, 0.1052, 0.1070, 0.1094],
        [0.1158, 0.1001, 0.1280, 0.1263, 0.1232, 0.1298, 0.1327, 0.1441],
        [0.1638, 0.0822, 0.1172, 0.1214, 0.1339, 0.1133, 0.1427, 0.1254],
        [0.1577, 0.0831, 0.1136, 0.1171, 0.1397, 0.1094, 0.1603, 0.1190],
        [0.1456, 0.0888, 0.1147, 0.1064, 0.1575, 0.1249, 0.1409, 0.1211]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/20 11:58:55 PM | Train: [21/100] Step 000/097 Loss 0.646 Prec@(1,5) (79.7%, 98.4%)
11/21 12:09:45 AM | Train: [21/100] Step 050/097 Loss 0.598 Prec@(1,5) (78.9%, 99.0%)
11/21 12:19:51 AM | Train: [21/100] Step 097/097 Loss 0.615 Prec@(1,5) (78.6%, 98.8%)
11/21 12:22:40 AM | Train: [21/100] Final Prec@1 78.5600%
11/21 12:22:43 AM | Valid: [21/100] Step 000/097 Loss 0.612 Prec@(1,5) (79.7%, 98.4%)
11/21 12:24:10 AM | Valid: [21/100] Step 050/097 Loss 0.690 Prec@(1,5) (76.3%, 98.3%)
11/21 12:25:32 AM | Valid: [21/100] Step 097/097 Loss 0.677 Prec@(1,5) (76.5%, 98.4%)
11/21 12:25:32 AM | Valid: [21/100] Final Prec@1 76.4640%
11/21 12:25:32 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2791, 0.0459, 0.0922, 0.1150, 0.1499, 0.0881, 0.1234, 0.1064],
        [0.1009, 0.0480, 0.0849, 0.2376, 0.1206, 0.1399, 0.0984, 0.1697]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1758, 0.0629, 0.1111, 0.1346, 0.1425, 0.0975, 0.1235, 0.1521],
        [0.1338, 0.0634, 0.0962, 0.1444, 0.1688, 0.1159, 0.1241, 0.1534],
        [0.1121, 0.0536, 0.0996, 0.1207, 0.1482, 0.1284, 0.1575, 0.1799]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1682, 0.0668, 0.0999, 0.1682, 0.1553, 0.1073, 0.0942, 0.1400],
        [0.0980, 0.0588, 0.0765, 0.2988, 0.1250, 0.1008, 0.1162, 0.1259],
        [0.1204, 0.0578, 0.0942, 0.1382, 0.1431, 0.1067, 0.1353, 0.2043],
        [0.0771, 0.0481, 0.0712, 0.1387, 0.1830, 0.1242, 0.1358, 0.2218]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1773, 0.0790, 0.1126, 0.1278, 0.1212, 0.1028, 0.1170, 0.1623],
        [0.1282, 0.0769, 0.1006, 0.1385, 0.1384, 0.1101, 0.1113, 0.1961],
        [0.1213, 0.0623, 0.0995, 0.1157, 0.1433, 0.1058, 0.1169, 0.2351],
        [0.0834, 0.0514, 0.0725, 0.1485, 0.1494, 0.1172, 0.1356, 0.2420],
        [0.0658, 0.0482, 0.0576, 0.1210, 0.1616, 0.1334, 0.1492, 0.2631]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3181, 0.0846, 0.0802, 0.1216, 0.1284, 0.0858, 0.1013, 0.0799],
        [0.1224, 0.0896, 0.1104, 0.1143, 0.1322, 0.1222, 0.1156, 0.1933]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2358, 0.1072, 0.1031, 0.1221, 0.1269, 0.1040, 0.0985, 0.1024],
        [0.1249, 0.0986, 0.1291, 0.1109, 0.1220, 0.1321, 0.1241, 0.1583],
        [0.1557, 0.0709, 0.1084, 0.1380, 0.1502, 0.1125, 0.1542, 0.1102]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1919, 0.1095, 0.1120, 0.1208, 0.1278, 0.1100, 0.1163, 0.1116],
        [0.1229, 0.1041, 0.1233, 0.1275, 0.1452, 0.1154, 0.1156, 0.1459],
        [0.1362, 0.0750, 0.1067, 0.1107, 0.1784, 0.1228, 0.1550, 0.1152],
        [0.1405, 0.0802, 0.1114, 0.1366, 0.1427, 0.1200, 0.1498, 0.1187]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1967, 0.1127, 0.1148, 0.1252, 0.1322, 0.1034, 0.1064, 0.1086],
        [0.1184, 0.1013, 0.1277, 0.1253, 0.1240, 0.1273, 0.1310, 0.1450],
        [0.1670, 0.0818, 0.1177, 0.1203, 0.1336, 0.1111, 0.1432, 0.1254],
        [0.1601, 0.0819, 0.1131, 0.1153, 0.1394, 0.1090, 0.1632, 0.1179],
        [0.1449, 0.0875, 0.1132, 0.1072, 0.1575, 0.1254, 0.1441, 0.1202]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 12:25:50 AM | Train: [22/100] Step 000/097 Loss 0.514 Prec@(1,5) (82.8%, 100.0%)
11/21 12:36:52 AM | Train: [22/100] Step 050/097 Loss 0.577 Prec@(1,5) (79.2%, 99.2%)
11/21 12:46:58 AM | Train: [22/100] Step 097/097 Loss 0.610 Prec@(1,5) (78.5%, 98.9%)
11/21 12:49:41 AM | Train: [22/100] Final Prec@1 78.4960%
11/21 12:49:43 AM | Valid: [22/100] Step 000/097 Loss 0.642 Prec@(1,5) (79.7%, 98.4%)
11/21 12:51:10 AM | Valid: [22/100] Step 050/097 Loss 0.680 Prec@(1,5) (76.7%, 98.7%)
11/21 12:52:31 AM | Valid: [22/100] Step 097/097 Loss 0.662 Prec@(1,5) (77.0%, 98.8%)
11/21 12:52:31 AM | Valid: [22/100] Final Prec@1 77.0400%
11/21 12:52:31 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2915, 0.0461, 0.0941, 0.1093, 0.1514, 0.0842, 0.1185, 0.1049],
        [0.0995, 0.0490, 0.0868, 0.2287, 0.1222, 0.1451, 0.1010, 0.1676]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1827, 0.0632, 0.1150, 0.1311, 0.1348, 0.0975, 0.1247, 0.1510],
        [0.1357, 0.0645, 0.0994, 0.1418, 0.1633, 0.1168, 0.1241, 0.1544],
        [0.1148, 0.0544, 0.1012, 0.1202, 0.1499, 0.1227, 0.1563, 0.1804]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1703, 0.0675, 0.1025, 0.1739, 0.1513, 0.1040, 0.0924, 0.1382],
        [0.0969, 0.0595, 0.0775, 0.3007, 0.1268, 0.0974, 0.1139, 0.1273],
        [0.1209, 0.0583, 0.0947, 0.1367, 0.1479, 0.1068, 0.1291, 0.2056],
        [0.0758, 0.0479, 0.0705, 0.1348, 0.1916, 0.1261, 0.1317, 0.2216]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1748, 0.0783, 0.1128, 0.1283, 0.1261, 0.1054, 0.1139, 0.1605],
        [0.1271, 0.0781, 0.1032, 0.1381, 0.1380, 0.1085, 0.1127, 0.1944],
        [0.1220, 0.0622, 0.0985, 0.1178, 0.1442, 0.1038, 0.1207, 0.2308],
        [0.0834, 0.0514, 0.0721, 0.1530, 0.1442, 0.1174, 0.1388, 0.2398],
        [0.0660, 0.0484, 0.0575, 0.1205, 0.1577, 0.1296, 0.1535, 0.2669]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3273, 0.0835, 0.0778, 0.1186, 0.1287, 0.0820, 0.1032, 0.0789],
        [0.1183, 0.0867, 0.1109, 0.1174, 0.1363, 0.1195, 0.1163, 0.1947]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2360, 0.1066, 0.1024, 0.1222, 0.1296, 0.1019, 0.0994, 0.1019],
        [0.1254, 0.0995, 0.1310, 0.1109, 0.1225, 0.1286, 0.1222, 0.1598],
        [0.1531, 0.0694, 0.1071, 0.1407, 0.1527, 0.1142, 0.1534, 0.1093]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1917, 0.1093, 0.1127, 0.1216, 0.1265, 0.1096, 0.1170, 0.1116],
        [0.1229, 0.1040, 0.1237, 0.1272, 0.1432, 0.1170, 0.1164, 0.1456],
        [0.1348, 0.0734, 0.1055, 0.1113, 0.1792, 0.1228, 0.1579, 0.1150],
        [0.1420, 0.0795, 0.1109, 0.1391, 0.1422, 0.1212, 0.1473, 0.1180]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1994, 0.1125, 0.1143, 0.1257, 0.1322, 0.1030, 0.1048, 0.1081],
        [0.1201, 0.1021, 0.1279, 0.1245, 0.1244, 0.1275, 0.1275, 0.1460],
        [0.1659, 0.0803, 0.1161, 0.1228, 0.1333, 0.1117, 0.1451, 0.1248],
        [0.1629, 0.0811, 0.1126, 0.1136, 0.1374, 0.1091, 0.1646, 0.1186],
        [0.1465, 0.0871, 0.1140, 0.1075, 0.1553, 0.1258, 0.1437, 0.1202]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 12:52:49 AM | Train: [23/100] Step 000/097 Loss 0.555 Prec@(1,5) (81.2%, 100.0%)
11/21 01:03:39 AM | Train: [23/100] Step 050/097 Loss 0.595 Prec@(1,5) (78.1%, 99.1%)
11/21 01:13:39 AM | Train: [23/100] Step 097/097 Loss 0.579 Prec@(1,5) (79.3%, 99.0%)
11/21 01:16:36 AM | Train: [23/100] Final Prec@1 79.3440%
11/21 01:16:38 AM | Valid: [23/100] Step 000/097 Loss 0.591 Prec@(1,5) (81.2%, 100.0%)
11/21 01:18:04 AM | Valid: [23/100] Step 050/097 Loss 0.694 Prec@(1,5) (77.1%, 98.7%)
11/21 01:19:25 AM | Valid: [23/100] Step 097/097 Loss 0.676 Prec@(1,5) (77.4%, 98.6%)
11/21 01:19:25 AM | Valid: [23/100] Final Prec@1 77.4240%
11/21 01:19:25 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2956, 0.0452, 0.0917, 0.1106, 0.1492, 0.0880, 0.1175, 0.1022],
        [0.0985, 0.0483, 0.0861, 0.2359, 0.1258, 0.1377, 0.1008, 0.1669]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1910, 0.0627, 0.1135, 0.1356, 0.1301, 0.0962, 0.1208, 0.1501],
        [0.1447, 0.0654, 0.1007, 0.1419, 0.1535, 0.1163, 0.1235, 0.1539],
        [0.1225, 0.0553, 0.1020, 0.1197, 0.1534, 0.1213, 0.1493, 0.1766]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1722, 0.0666, 0.1009, 0.1769, 0.1541, 0.1024, 0.0903, 0.1365],
        [0.0992, 0.0609, 0.0793, 0.2933, 0.1264, 0.0989, 0.1125, 0.1295],
        [0.1242, 0.0587, 0.0946, 0.1370, 0.1499, 0.1030, 0.1296, 0.2031],
        [0.0778, 0.0488, 0.0716, 0.1296, 0.1912, 0.1267, 0.1317, 0.2226]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1802, 0.0775, 0.1120, 0.1305, 0.1269, 0.1031, 0.1108, 0.1590],
        [0.1272, 0.0773, 0.1024, 0.1343, 0.1433, 0.1096, 0.1146, 0.1913],
        [0.1279, 0.0629, 0.0990, 0.1193, 0.1387, 0.1040, 0.1194, 0.2288],
        [0.0849, 0.0517, 0.0719, 0.1540, 0.1431, 0.1199, 0.1370, 0.2374],
        [0.0661, 0.0479, 0.0567, 0.1226, 0.1616, 0.1302, 0.1491, 0.2658]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3232, 0.0838, 0.0797, 0.1190, 0.1279, 0.0824, 0.1052, 0.0789],
        [0.1173, 0.0856, 0.1136, 0.1163, 0.1376, 0.1200, 0.1153, 0.1943]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2354, 0.1054, 0.1018, 0.1244, 0.1302, 0.1013, 0.0994, 0.1021],
        [0.1257, 0.0993, 0.1305, 0.1107, 0.1217, 0.1263, 0.1232, 0.1626],
        [0.1565, 0.0690, 0.1066, 0.1395, 0.1532, 0.1128, 0.1545, 0.1080]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1910, 0.1088, 0.1115, 0.1239, 0.1277, 0.1100, 0.1154, 0.1117],
        [0.1234, 0.1038, 0.1236, 0.1248, 0.1456, 0.1174, 0.1153, 0.1461],
        [0.1352, 0.0730, 0.1054, 0.1119, 0.1794, 0.1206, 0.1607, 0.1138],
        [0.1432, 0.0786, 0.1096, 0.1406, 0.1396, 0.1196, 0.1522, 0.1164]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1995, 0.1116, 0.1123, 0.1266, 0.1325, 0.1039, 0.1045, 0.1091],
        [0.1195, 0.1015, 0.1295, 0.1241, 0.1260, 0.1258, 0.1267, 0.1470],
        [0.1661, 0.0794, 0.1151, 0.1229, 0.1345, 0.1135, 0.1445, 0.1240],
        [0.1630, 0.0800, 0.1110, 0.1138, 0.1381, 0.1084, 0.1678, 0.1179],
        [0.1493, 0.0869, 0.1147, 0.1092, 0.1503, 0.1266, 0.1428, 0.1202]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 01:19:43 AM | Train: [24/100] Step 000/097 Loss 0.773 Prec@(1,5) (75.0%, 100.0%)
11/21 01:30:25 AM | Train: [24/100] Step 050/097 Loss 0.604 Prec@(1,5) (79.0%, 98.9%)
11/21 01:40:37 AM | Train: [24/100] Step 097/097 Loss 0.602 Prec@(1,5) (79.2%, 98.9%)
11/21 01:43:18 AM | Train: [24/100] Final Prec@1 79.2000%
11/21 01:43:21 AM | Valid: [24/100] Step 000/097 Loss 0.468 Prec@(1,5) (82.8%, 100.0%)
11/21 01:44:47 AM | Valid: [24/100] Step 050/097 Loss 0.641 Prec@(1,5) (77.7%, 98.7%)
11/21 01:46:09 AM | Valid: [24/100] Step 097/097 Loss 0.632 Prec@(1,5) (78.4%, 98.8%)
11/21 01:46:09 AM | Valid: [24/100] Final Prec@1 78.3840%
11/21 01:46:09 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('sep_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3066, 0.0456, 0.0928, 0.1074, 0.1444, 0.0861, 0.1150, 0.1021],
        [0.0976, 0.0487, 0.0856, 0.2382, 0.1223, 0.1440, 0.1018, 0.1618]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1868, 0.0631, 0.1135, 0.1379, 0.1300, 0.0938, 0.1222, 0.1525],
        [0.1452, 0.0659, 0.1003, 0.1449, 0.1539, 0.1136, 0.1257, 0.1505],
        [0.1206, 0.0547, 0.1011, 0.1222, 0.1468, 0.1200, 0.1553, 0.1793]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1794, 0.0675, 0.1013, 0.1732, 0.1511, 0.1035, 0.0893, 0.1346],
        [0.0988, 0.0608, 0.0788, 0.2914, 0.1289, 0.1004, 0.1132, 0.1276],
        [0.1270, 0.0591, 0.0949, 0.1328, 0.1521, 0.1023, 0.1275, 0.2043],
        [0.0787, 0.0491, 0.0718, 0.1321, 0.1859, 0.1218, 0.1320, 0.2286]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1872, 0.0782, 0.1115, 0.1263, 0.1252, 0.1039, 0.1091, 0.1587],
        [0.1260, 0.0772, 0.1013, 0.1372, 0.1436, 0.1091, 0.1147, 0.1910],
        [0.1264, 0.0627, 0.0979, 0.1191, 0.1383, 0.1058, 0.1212, 0.2286],
        [0.0845, 0.0517, 0.0712, 0.1557, 0.1454, 0.1166, 0.1327, 0.2420],
        [0.0673, 0.0484, 0.0569, 0.1215, 0.1570, 0.1273, 0.1506, 0.2709]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3132, 0.0836, 0.0813, 0.1226, 0.1300, 0.0828, 0.1077, 0.0789],
        [0.1163, 0.0852, 0.1124, 0.1161, 0.1375, 0.1187, 0.1170, 0.1967]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2339, 0.1051, 0.1029, 0.1235, 0.1286, 0.1036, 0.0996, 0.1028],
        [0.1253, 0.0990, 0.1284, 0.1116, 0.1217, 0.1270, 0.1251, 0.1619],
        [0.1572, 0.0684, 0.1057, 0.1401, 0.1533, 0.1115, 0.1562, 0.1076]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1885, 0.1085, 0.1116, 0.1254, 0.1294, 0.1087, 0.1166, 0.1112],
        [0.1232, 0.1035, 0.1221, 0.1261, 0.1465, 0.1175, 0.1158, 0.1454],
        [0.1345, 0.0725, 0.1049, 0.1113, 0.1842, 0.1172, 0.1617, 0.1137],
        [0.1423, 0.0785, 0.1094, 0.1415, 0.1414, 0.1198, 0.1501, 0.1170]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1988, 0.1114, 0.1129, 0.1260, 0.1328, 0.1057, 0.1039, 0.1085],
        [0.1203, 0.1021, 0.1263, 0.1241, 0.1284, 0.1242, 0.1269, 0.1476],
        [0.1666, 0.0790, 0.1149, 0.1244, 0.1343, 0.1148, 0.1422, 0.1237],
        [0.1632, 0.0800, 0.1111, 0.1132, 0.1407, 0.1076, 0.1668, 0.1175],
        [0.1511, 0.0872, 0.1151, 0.1080, 0.1494, 0.1259, 0.1426, 0.1207]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 01:46:27 AM | Train: [25/100] Step 000/097 Loss 0.382 Prec@(1,5) (84.4%, 98.4%)
11/21 01:57:11 AM | Train: [25/100] Step 050/097 Loss 0.532 Prec@(1,5) (81.2%, 99.1%)
11/21 02:07:22 AM | Train: [25/100] Step 097/097 Loss 0.561 Prec@(1,5) (80.4%, 99.1%)
11/21 02:10:16 AM | Train: [25/100] Final Prec@1 80.3680%
11/21 02:10:18 AM | Valid: [25/100] Step 000/097 Loss 0.529 Prec@(1,5) (85.9%, 98.4%)
11/21 02:11:46 AM | Valid: [25/100] Step 050/097 Loss 0.641 Prec@(1,5) (78.1%, 98.7%)
11/21 02:13:08 AM | Valid: [25/100] Step 097/097 Loss 0.632 Prec@(1,5) (78.2%, 98.7%)
11/21 02:13:08 AM | Valid: [25/100] Final Prec@1 78.2080%
11/21 02:13:08 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('sep_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.2863, 0.0450, 0.0923, 0.1111, 0.1560, 0.0866, 0.1217, 0.1009],
        [0.1022, 0.0498, 0.0891, 0.2299, 0.1201, 0.1446, 0.1009, 0.1633]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1887, 0.0630, 0.1155, 0.1348, 0.1296, 0.0939, 0.1233, 0.1511],
        [0.1441, 0.0653, 0.0999, 0.1507, 0.1516, 0.1136, 0.1265, 0.1484],
        [0.1236, 0.0551, 0.1029, 0.1201, 0.1408, 0.1187, 0.1575, 0.1814]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1753, 0.0655, 0.0981, 0.1797, 0.1562, 0.1023, 0.0908, 0.1321],
        [0.0993, 0.0607, 0.0784, 0.2942, 0.1272, 0.0984, 0.1161, 0.1257],
        [0.1300, 0.0591, 0.0950, 0.1396, 0.1440, 0.1028, 0.1260, 0.2035],
        [0.0800, 0.0495, 0.0720, 0.1294, 0.1828, 0.1203, 0.1365, 0.2296]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1814, 0.0768, 0.1103, 0.1315, 0.1302, 0.1015, 0.1087, 0.1596],
        [0.1282, 0.0774, 0.1008, 0.1357, 0.1429, 0.1088, 0.1169, 0.1893],
        [0.1276, 0.0622, 0.0970, 0.1194, 0.1400, 0.1070, 0.1192, 0.2275],
        [0.0857, 0.0522, 0.0716, 0.1536, 0.1407, 0.1136, 0.1351, 0.2475],
        [0.0682, 0.0491, 0.0575, 0.1215, 0.1550, 0.1264, 0.1494, 0.2728]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3015, 0.0841, 0.0810, 0.1282, 0.1330, 0.0840, 0.1083, 0.0798],
        [0.1206, 0.0869, 0.1131, 0.1160, 0.1356, 0.1147, 0.1172, 0.1959]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2293, 0.1047, 0.1024, 0.1243, 0.1324, 0.1034, 0.0996, 0.1039],
        [0.1282, 0.1000, 0.1262, 0.1127, 0.1238, 0.1260, 0.1226, 0.1606],
        [0.1544, 0.0670, 0.1042, 0.1382, 0.1579, 0.1105, 0.1611, 0.1068]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1849, 0.1078, 0.1137, 0.1263, 0.1320, 0.1074, 0.1163, 0.1117],
        [0.1255, 0.1050, 0.1217, 0.1250, 0.1452, 0.1164, 0.1164, 0.1447],
        [0.1366, 0.0722, 0.1049, 0.1119, 0.1776, 0.1180, 0.1652, 0.1136],
        [0.1470, 0.0786, 0.1096, 0.1327, 0.1407, 0.1219, 0.1531, 0.1162]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1995, 0.1121, 0.1122, 0.1271, 0.1326, 0.1046, 0.1026, 0.1093],
        [0.1218, 0.1031, 0.1283, 0.1232, 0.1270, 0.1229, 0.1268, 0.1470],
        [0.1671, 0.0780, 0.1143, 0.1261, 0.1339, 0.1129, 0.1444, 0.1233],
        [0.1670, 0.0795, 0.1106, 0.1118, 0.1430, 0.1075, 0.1644, 0.1162],
        [0.1532, 0.0865, 0.1154, 0.1071, 0.1484, 0.1260, 0.1425, 0.1210]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 02:13:26 AM | Train: [26/100] Step 000/097 Loss 0.468 Prec@(1,5) (85.9%, 100.0%)
11/21 02:24:14 AM | Train: [26/100] Step 050/097 Loss 0.543 Prec@(1,5) (80.8%, 98.9%)
11/21 02:34:21 AM | Train: [26/100] Step 097/097 Loss 0.563 Prec@(1,5) (80.4%, 98.8%)
11/21 02:37:00 AM | Train: [26/100] Final Prec@1 80.4000%
11/21 02:37:03 AM | Valid: [26/100] Step 000/097 Loss 0.520 Prec@(1,5) (82.8%, 98.4%)
11/21 02:38:29 AM | Valid: [26/100] Step 050/097 Loss 0.614 Prec@(1,5) (79.7%, 98.8%)
11/21 02:39:51 AM | Valid: [26/100] Step 097/097 Loss 0.604 Prec@(1,5) (79.7%, 98.8%)
11/21 02:39:52 AM | Valid: [26/100] Final Prec@1 79.6800%
11/21 02:39:52 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('dil_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3039, 0.0446, 0.0918, 0.1044, 0.1503, 0.0869, 0.1200, 0.0982],
        [0.1042, 0.0500, 0.0892, 0.2310, 0.1211, 0.1359, 0.1043, 0.1643]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1882, 0.0625, 0.1137, 0.1387, 0.1296, 0.0942, 0.1239, 0.1492],
        [0.1412, 0.0647, 0.0991, 0.1513, 0.1555, 0.1158, 0.1250, 0.1476],
        [0.1243, 0.0546, 0.1012, 0.1228, 0.1390, 0.1178, 0.1599, 0.1805]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1753, 0.0652, 0.0988, 0.1763, 0.1601, 0.1020, 0.0906, 0.1318],
        [0.0964, 0.0602, 0.0777, 0.3045, 0.1226, 0.0959, 0.1170, 0.1255],
        [0.1275, 0.0581, 0.0939, 0.1403, 0.1427, 0.1026, 0.1308, 0.2041],
        [0.0800, 0.0494, 0.0719, 0.1310, 0.1793, 0.1230, 0.1363, 0.2290]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1788, 0.0756, 0.1095, 0.1298, 0.1337, 0.1018, 0.1109, 0.1599],
        [0.1255, 0.0766, 0.1014, 0.1362, 0.1475, 0.1065, 0.1131, 0.1931],
        [0.1266, 0.0616, 0.0959, 0.1187, 0.1459, 0.1077, 0.1205, 0.2230],
        [0.0856, 0.0522, 0.0717, 0.1509, 0.1408, 0.1150, 0.1340, 0.2499],
        [0.0671, 0.0485, 0.0568, 0.1191, 0.1540, 0.1256, 0.1575, 0.2715]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3188, 0.0828, 0.0797, 0.1235, 0.1290, 0.0815, 0.1064, 0.0784],
        [0.1184, 0.0855, 0.1132, 0.1117, 0.1424, 0.1181, 0.1175, 0.1932]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2375, 0.1046, 0.1033, 0.1216, 0.1303, 0.1012, 0.0981, 0.1033],
        [0.1297, 0.0997, 0.1274, 0.1140, 0.1228, 0.1248, 0.1201, 0.1617],
        [0.1576, 0.0672, 0.1052, 0.1358, 0.1537, 0.1116, 0.1622, 0.1067]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1865, 0.1076, 0.1146, 0.1242, 0.1328, 0.1081, 0.1150, 0.1114],
        [0.1285, 0.1063, 0.1205, 0.1261, 0.1433, 0.1159, 0.1154, 0.1440],
        [0.1376, 0.0722, 0.1054, 0.1119, 0.1791, 0.1193, 0.1615, 0.1130],
        [0.1458, 0.0780, 0.1095, 0.1323, 0.1444, 0.1221, 0.1518, 0.1162]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2009, 0.1112, 0.1130, 0.1247, 0.1324, 0.1056, 0.1030, 0.1091],
        [0.1211, 0.1019, 0.1284, 0.1247, 0.1287, 0.1252, 0.1231, 0.1470],
        [0.1685, 0.0777, 0.1144, 0.1270, 0.1338, 0.1137, 0.1418, 0.1232],
        [0.1659, 0.0787, 0.1102, 0.1130, 0.1419, 0.1076, 0.1657, 0.1170],
        [0.1523, 0.0854, 0.1143, 0.1075, 0.1494, 0.1269, 0.1431, 0.1211]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 02:40:09 AM | Train: [27/100] Step 000/097 Loss 0.485 Prec@(1,5) (85.9%, 98.4%)
11/21 02:50:54 AM | Train: [27/100] Step 050/097 Loss 0.526 Prec@(1,5) (82.0%, 99.2%)
11/21 03:00:59 AM | Train: [27/100] Step 097/097 Loss 0.521 Prec@(1,5) (82.1%, 99.2%)
11/21 03:03:48 AM | Train: [27/100] Final Prec@1 82.0640%
11/21 03:03:51 AM | Valid: [27/100] Step 000/097 Loss 0.474 Prec@(1,5) (84.4%, 98.4%)
11/21 03:05:17 AM | Valid: [27/100] Step 050/097 Loss 0.619 Prec@(1,5) (79.0%, 98.4%)
11/21 03:06:38 AM | Valid: [27/100] Step 097/097 Loss 0.615 Prec@(1,5) (79.0%, 98.6%)
11/21 03:06:38 AM | Valid: [27/100] Final Prec@1 79.0080%
11/21 03:06:38 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('dil_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3298, 0.0442, 0.0907, 0.1029, 0.1447, 0.0852, 0.1080, 0.0945],
        [0.1050, 0.0505, 0.0889, 0.2262, 0.1205, 0.1434, 0.1036, 0.1620]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1907, 0.0629, 0.1115, 0.1394, 0.1325, 0.0942, 0.1232, 0.1456],
        [0.1392, 0.0642, 0.0970, 0.1549, 0.1588, 0.1174, 0.1235, 0.1449],
        [0.1275, 0.0545, 0.1001, 0.1268, 0.1405, 0.1168, 0.1555, 0.1784]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1803, 0.0659, 0.0991, 0.1788, 0.1554, 0.1013, 0.0899, 0.1293],
        [0.0959, 0.0603, 0.0769, 0.3028, 0.1225, 0.0985, 0.1179, 0.1252],
        [0.1324, 0.0586, 0.0939, 0.1441, 0.1429, 0.0983, 0.1287, 0.2011],
        [0.0814, 0.0500, 0.0723, 0.1343, 0.1736, 0.1242, 0.1394, 0.2247]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1836, 0.0761, 0.1091, 0.1307, 0.1330, 0.1008, 0.1095, 0.1572],
        [0.1276, 0.0773, 0.1013, 0.1382, 0.1449, 0.1071, 0.1123, 0.1913],
        [0.1291, 0.0622, 0.0961, 0.1185, 0.1455, 0.1078, 0.1239, 0.2169],
        [0.0885, 0.0532, 0.0724, 0.1505, 0.1402, 0.1123, 0.1331, 0.2499],
        [0.0685, 0.0496, 0.0577, 0.1193, 0.1523, 0.1240, 0.1596, 0.2689]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3247, 0.0827, 0.0798, 0.1242, 0.1284, 0.0809, 0.1003, 0.0791],
        [0.1185, 0.0859, 0.1137, 0.1112, 0.1480, 0.1175, 0.1159, 0.1893]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2308, 0.1043, 0.1041, 0.1233, 0.1312, 0.1023, 0.0987, 0.1052],
        [0.1297, 0.0999, 0.1254, 0.1149, 0.1216, 0.1258, 0.1209, 0.1619],
        [0.1557, 0.0659, 0.1030, 0.1364, 0.1575, 0.1123, 0.1634, 0.1058]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1833, 0.1067, 0.1132, 0.1266, 0.1331, 0.1085, 0.1160, 0.1126],
        [0.1276, 0.1059, 0.1199, 0.1284, 0.1413, 0.1169, 0.1168, 0.1432],
        [0.1370, 0.0711, 0.1029, 0.1122, 0.1791, 0.1178, 0.1682, 0.1117],
        [0.1494, 0.0779, 0.1087, 0.1283, 0.1449, 0.1203, 0.1544, 0.1161]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2006, 0.1109, 0.1136, 0.1252, 0.1328, 0.1041, 0.1028, 0.1100],
        [0.1215, 0.1023, 0.1291, 0.1259, 0.1265, 0.1260, 0.1221, 0.1467],
        [0.1682, 0.0769, 0.1125, 0.1278, 0.1358, 0.1142, 0.1417, 0.1229],
        [0.1675, 0.0779, 0.1080, 0.1119, 0.1469, 0.1063, 0.1660, 0.1154],
        [0.1549, 0.0848, 0.1129, 0.1079, 0.1524, 0.1260, 0.1415, 0.1196]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 03:06:56 AM | Train: [28/100] Step 000/097 Loss 0.561 Prec@(1,5) (78.1%, 98.4%)
11/21 03:17:38 AM | Train: [28/100] Step 050/097 Loss 0.526 Prec@(1,5) (81.4%, 99.0%)
11/21 03:27:39 AM | Train: [28/100] Step 097/097 Loss 0.537 Prec@(1,5) (81.1%, 99.0%)
11/21 03:30:44 AM | Train: [28/100] Final Prec@1 81.0560%
11/21 03:30:46 AM | Valid: [28/100] Step 000/097 Loss 0.636 Prec@(1,5) (78.1%, 98.4%)
11/21 03:32:13 AM | Valid: [28/100] Step 050/097 Loss 0.619 Prec@(1,5) (79.0%, 98.7%)
11/21 03:33:36 AM | Valid: [28/100] Step 097/097 Loss 0.606 Prec@(1,5) (79.1%, 98.8%)
11/21 03:33:36 AM | Valid: [28/100] Final Prec@1 79.0560%
11/21 03:33:36 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('sep_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3186, 0.0446, 0.0900, 0.1063, 0.1471, 0.0842, 0.1149, 0.0944],
        [0.1032, 0.0498, 0.0853, 0.2393, 0.1227, 0.1390, 0.1002, 0.1605]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1880, 0.0635, 0.1132, 0.1404, 0.1302, 0.0932, 0.1253, 0.1463],
        [0.1398, 0.0643, 0.0962, 0.1576, 0.1582, 0.1149, 0.1235, 0.1455],
        [0.1251, 0.0542, 0.0986, 0.1294, 0.1434, 0.1131, 0.1612, 0.1749]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1779, 0.0665, 0.0999, 0.1767, 0.1591, 0.1002, 0.0921, 0.1276],
        [0.0982, 0.0612, 0.0774, 0.3026, 0.1227, 0.0972, 0.1147, 0.1260],
        [0.1370, 0.0594, 0.0948, 0.1422, 0.1345, 0.1004, 0.1301, 0.2016],
        [0.0826, 0.0503, 0.0726, 0.1345, 0.1715, 0.1245, 0.1366, 0.2273]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1841, 0.0769, 0.1103, 0.1305, 0.1330, 0.0997, 0.1085, 0.1571],
        [0.1287, 0.0777, 0.1000, 0.1383, 0.1419, 0.1075, 0.1147, 0.1912],
        [0.1309, 0.0627, 0.0958, 0.1193, 0.1425, 0.1093, 0.1229, 0.2165],
        [0.0890, 0.0534, 0.0724, 0.1480, 0.1400, 0.1135, 0.1353, 0.2483],
        [0.0679, 0.0493, 0.0571, 0.1179, 0.1543, 0.1252, 0.1527, 0.2756]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3431, 0.0826, 0.0773, 0.1237, 0.1215, 0.0778, 0.0971, 0.0770],
        [0.1201, 0.0868, 0.1170, 0.1120, 0.1425, 0.1170, 0.1143, 0.1902]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2401, 0.1059, 0.1021, 0.1224, 0.1284, 0.1011, 0.0962, 0.1038],
        [0.1311, 0.1008, 0.1286, 0.1148, 0.1204, 0.1240, 0.1190, 0.1613],
        [0.1583, 0.0667, 0.1040, 0.1391, 0.1561, 0.1127, 0.1569, 0.1063]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1863, 0.1084, 0.1132, 0.1253, 0.1308, 0.1078, 0.1159, 0.1123],
        [0.1289, 0.1072, 0.1203, 0.1257, 0.1417, 0.1177, 0.1161, 0.1425],
        [0.1376, 0.0714, 0.1033, 0.1130, 0.1794, 0.1168, 0.1660, 0.1124],
        [0.1509, 0.0782, 0.1094, 0.1275, 0.1429, 0.1194, 0.1555, 0.1162]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2030, 0.1126, 0.1140, 0.1254, 0.1319, 0.1030, 0.1010, 0.1091],
        [0.1229, 0.1030, 0.1301, 0.1248, 0.1265, 0.1240, 0.1219, 0.1468],
        [0.1707, 0.0776, 0.1136, 0.1256, 0.1351, 0.1149, 0.1379, 0.1245],
        [0.1701, 0.0781, 0.1078, 0.1144, 0.1438, 0.1055, 0.1646, 0.1157],
        [0.1555, 0.0849, 0.1126, 0.1091, 0.1478, 0.1255, 0.1439, 0.1206]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 03:33:54 AM | Train: [29/100] Step 000/097 Loss 0.535 Prec@(1,5) (81.2%, 100.0%)
11/21 03:44:32 AM | Train: [29/100] Step 050/097 Loss 0.499 Prec@(1,5) (82.9%, 99.4%)
11/21 03:54:31 AM | Train: [29/100] Step 097/097 Loss 0.529 Prec@(1,5) (81.9%, 99.1%)
11/21 03:57:49 AM | Train: [29/100] Final Prec@1 81.9040%
11/21 03:57:52 AM | Valid: [29/100] Step 000/097 Loss 0.423 Prec@(1,5) (85.9%, 98.4%)
11/21 03:59:18 AM | Valid: [29/100] Step 050/097 Loss 0.571 Prec@(1,5) (80.5%, 99.0%)
11/21 04:00:40 AM | Valid: [29/100] Step 097/097 Loss 0.574 Prec@(1,5) (80.2%, 99.0%)
11/21 04:00:40 AM | Valid: [29/100] Final Prec@1 80.1760%
11/21 04:00:40 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('max_pool_3x3', 0), ('sep_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3341, 0.0446, 0.0896, 0.1019, 0.1509, 0.0784, 0.1096, 0.0910],
        [0.1020, 0.0506, 0.0864, 0.2305, 0.1221, 0.1422, 0.1045, 0.1617]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1907, 0.0642, 0.1144, 0.1417, 0.1296, 0.0919, 0.1257, 0.1417],
        [0.1418, 0.0656, 0.0975, 0.1497, 0.1621, 0.1151, 0.1238, 0.1445],
        [0.1247, 0.0548, 0.0994, 0.1266, 0.1435, 0.1143, 0.1604, 0.1762]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1739, 0.0669, 0.1004, 0.1841, 0.1579, 0.1014, 0.0891, 0.1262],
        [0.0980, 0.0622, 0.0790, 0.2946, 0.1272, 0.0982, 0.1153, 0.1256],
        [0.1355, 0.0594, 0.0947, 0.1411, 0.1355, 0.1027, 0.1288, 0.2024],
        [0.0819, 0.0504, 0.0723, 0.1323, 0.1736, 0.1213, 0.1415, 0.2267]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1858, 0.0770, 0.1107, 0.1307, 0.1333, 0.1000, 0.1069, 0.1556],
        [0.1242, 0.0769, 0.0990, 0.1404, 0.1465, 0.1060, 0.1151, 0.1920],
        [0.1288, 0.0629, 0.0960, 0.1192, 0.1391, 0.1098, 0.1228, 0.2215],
        [0.0875, 0.0529, 0.0713, 0.1475, 0.1486, 0.1096, 0.1369, 0.2456],
        [0.0683, 0.0494, 0.0570, 0.1144, 0.1557, 0.1253, 0.1538, 0.2760]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3369, 0.0818, 0.0773, 0.1257, 0.1241, 0.0779, 0.0980, 0.0782],
        [0.1195, 0.0857, 0.1168, 0.1141, 0.1435, 0.1170, 0.1177, 0.1858]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2410, 0.1051, 0.1017, 0.1207, 0.1297, 0.1009, 0.0961, 0.1048],
        [0.1332, 0.1006, 0.1260, 0.1159, 0.1212, 0.1245, 0.1187, 0.1599],
        [0.1576, 0.0664, 0.1036, 0.1389, 0.1580, 0.1125, 0.1567, 0.1062]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1857, 0.1075, 0.1132, 0.1266, 0.1307, 0.1089, 0.1150, 0.1125],
        [0.1298, 0.1063, 0.1201, 0.1265, 0.1434, 0.1173, 0.1157, 0.1409],
        [0.1392, 0.0719, 0.1031, 0.1122, 0.1805, 0.1167, 0.1642, 0.1124],
        [0.1524, 0.0782, 0.1092, 0.1267, 0.1423, 0.1194, 0.1553, 0.1166]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1977, 0.1105, 0.1147, 0.1265, 0.1347, 0.1047, 0.1015, 0.1099],
        [0.1248, 0.1028, 0.1285, 0.1243, 0.1264, 0.1242, 0.1230, 0.1460],
        [0.1716, 0.0771, 0.1123, 0.1252, 0.1360, 0.1143, 0.1388, 0.1248],
        [0.1665, 0.0767, 0.1056, 0.1147, 0.1506, 0.1075, 0.1634, 0.1150],
        [0.1567, 0.0839, 0.1103, 0.1086, 0.1499, 0.1261, 0.1443, 0.1203]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 04:00:58 AM | Train: [30/100] Step 000/097 Loss 0.559 Prec@(1,5) (79.7%, 100.0%)
11/21 04:11:42 AM | Train: [30/100] Step 050/097 Loss 0.491 Prec@(1,5) (83.1%, 99.2%)
11/21 04:21:44 AM | Train: [30/100] Step 097/097 Loss 0.487 Prec@(1,5) (83.4%, 99.1%)
11/21 04:24:37 AM | Train: [30/100] Final Prec@1 83.4400%
11/21 04:24:40 AM | Valid: [30/100] Step 000/097 Loss 0.504 Prec@(1,5) (81.2%, 98.4%)
11/21 04:26:06 AM | Valid: [30/100] Step 050/097 Loss 0.616 Prec@(1,5) (79.2%, 99.1%)
11/21 04:27:28 AM | Valid: [30/100] Step 097/097 Loss 0.603 Prec@(1,5) (79.6%, 99.1%)
11/21 04:27:29 AM | Valid: [30/100] Final Prec@1 79.6320%
11/21 04:27:29 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('max_pool_3x3', 0), ('dil_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3299, 0.0449, 0.0889, 0.1047, 0.1466, 0.0808, 0.1130, 0.0913],
        [0.1040, 0.0512, 0.0875, 0.2417, 0.1245, 0.1368, 0.0984, 0.1559]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1885, 0.0646, 0.1142, 0.1439, 0.1325, 0.0952, 0.1210, 0.1401],
        [0.1434, 0.0658, 0.0967, 0.1528, 0.1669, 0.1143, 0.1183, 0.1417],
        [0.1307, 0.0554, 0.0992, 0.1251, 0.1470, 0.1129, 0.1582, 0.1715]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1722, 0.0670, 0.0993, 0.1862, 0.1610, 0.0991, 0.0899, 0.1253],
        [0.1018, 0.0635, 0.0805, 0.2941, 0.1220, 0.0979, 0.1164, 0.1238],
        [0.1414, 0.0603, 0.0944, 0.1393, 0.1357, 0.1011, 0.1290, 0.1988],
        [0.0844, 0.0515, 0.0734, 0.1331, 0.1785, 0.1183, 0.1350, 0.2258]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1808, 0.0768, 0.1100, 0.1321, 0.1401, 0.0990, 0.1081, 0.1530],
        [0.1273, 0.0783, 0.1012, 0.1424, 0.1456, 0.1066, 0.1123, 0.1863],
        [0.1314, 0.0634, 0.0952, 0.1233, 0.1408, 0.1075, 0.1215, 0.2168],
        [0.0890, 0.0539, 0.0720, 0.1478, 0.1505, 0.1109, 0.1384, 0.2376],
        [0.0698, 0.0502, 0.0578, 0.1152, 0.1552, 0.1242, 0.1602, 0.2674]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3434, 0.0809, 0.0763, 0.1215, 0.1223, 0.0780, 0.0994, 0.0781],
        [0.1229, 0.0870, 0.1144, 0.1139, 0.1401, 0.1152, 0.1222, 0.1843]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2382, 0.1042, 0.1011, 0.1214, 0.1312, 0.1016, 0.0968, 0.1054],
        [0.1349, 0.1013, 0.1241, 0.1156, 0.1235, 0.1238, 0.1177, 0.1592],
        [0.1581, 0.0670, 0.1037, 0.1374, 0.1547, 0.1119, 0.1611, 0.1061]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1832, 0.1067, 0.1127, 0.1272, 0.1314, 0.1102, 0.1157, 0.1130],
        [0.1312, 0.1073, 0.1190, 0.1255, 0.1451, 0.1167, 0.1155, 0.1396],
        [0.1393, 0.0725, 0.1032, 0.1117, 0.1800, 0.1159, 0.1652, 0.1122],
        [0.1517, 0.0785, 0.1087, 0.1266, 0.1419, 0.1189, 0.1571, 0.1166]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1945, 0.1097, 0.1155, 0.1280, 0.1343, 0.1048, 0.1022, 0.1110],
        [0.1263, 0.1035, 0.1266, 0.1255, 0.1276, 0.1235, 0.1213, 0.1457],
        [0.1729, 0.0776, 0.1115, 0.1255, 0.1360, 0.1144, 0.1382, 0.1238],
        [0.1668, 0.0768, 0.1045, 0.1177, 0.1496, 0.1069, 0.1627, 0.1151],
        [0.1567, 0.0837, 0.1092, 0.1092, 0.1496, 0.1269, 0.1453, 0.1194]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 04:27:46 AM | Train: [31/100] Step 000/097 Loss 0.574 Prec@(1,5) (81.2%, 98.4%)
11/21 04:38:33 AM | Train: [31/100] Step 050/097 Loss 0.475 Prec@(1,5) (82.8%, 99.3%)
11/21 04:48:41 AM | Train: [31/100] Step 097/097 Loss 0.503 Prec@(1,5) (82.4%, 99.2%)
11/21 04:51:40 AM | Train: [31/100] Final Prec@1 82.4000%
11/21 04:51:43 AM | Valid: [31/100] Step 000/097 Loss 0.425 Prec@(1,5) (89.1%, 100.0%)
11/21 04:53:10 AM | Valid: [31/100] Step 050/097 Loss 0.591 Prec@(1,5) (80.0%, 99.0%)
11/21 04:54:32 AM | Valid: [31/100] Step 097/097 Loss 0.593 Prec@(1,5) (79.8%, 98.9%)
11/21 04:54:32 AM | Valid: [31/100] Final Prec@1 79.7600%
11/21 04:54:32 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('max_pool_3x3', 0), ('dil_conv_5x5', 4)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3346, 0.0446, 0.0889, 0.1052, 0.1428, 0.0808, 0.1118, 0.0913],
        [0.1000, 0.0500, 0.0859, 0.2473, 0.1273, 0.1372, 0.0989, 0.1534]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1850, 0.0640, 0.1129, 0.1431, 0.1342, 0.0959, 0.1254, 0.1395],
        [0.1422, 0.0646, 0.0945, 0.1573, 0.1668, 0.1127, 0.1202, 0.1415],
        [0.1300, 0.0547, 0.0972, 0.1225, 0.1478, 0.1141, 0.1630, 0.1707]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1701, 0.0665, 0.0985, 0.1858, 0.1638, 0.0998, 0.0913, 0.1243],
        [0.0983, 0.0616, 0.0784, 0.3095, 0.1197, 0.0957, 0.1134, 0.1234],
        [0.1382, 0.0599, 0.0936, 0.1445, 0.1417, 0.0995, 0.1232, 0.1993],
        [0.0834, 0.0514, 0.0730, 0.1352, 0.1766, 0.1214, 0.1352, 0.2237]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1799, 0.0767, 0.1105, 0.1311, 0.1408, 0.0991, 0.1077, 0.1541],
        [0.1244, 0.0779, 0.1002, 0.1402, 0.1427, 0.1104, 0.1132, 0.1909],
        [0.1283, 0.0631, 0.0943, 0.1240, 0.1439, 0.1063, 0.1224, 0.2176],
        [0.0886, 0.0537, 0.0714, 0.1498, 0.1486, 0.1106, 0.1398, 0.2375],
        [0.0698, 0.0503, 0.0578, 0.1142, 0.1571, 0.1234, 0.1609, 0.2665]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3500, 0.0805, 0.0746, 0.1221, 0.1202, 0.0773, 0.0979, 0.0774],
        [0.1186, 0.0850, 0.1143, 0.1153, 0.1409, 0.1196, 0.1235, 0.1829]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2416, 0.1050, 0.1000, 0.1217, 0.1280, 0.1016, 0.0969, 0.1052],
        [0.1317, 0.0997, 0.1245, 0.1170, 0.1252, 0.1252, 0.1177, 0.1591],
        [0.1558, 0.0661, 0.1029, 0.1350, 0.1606, 0.1117, 0.1631, 0.1047]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1858, 0.1077, 0.1111, 0.1264, 0.1306, 0.1090, 0.1162, 0.1133],
        [0.1294, 0.1061, 0.1191, 0.1256, 0.1470, 0.1178, 0.1153, 0.1396],
        [0.1393, 0.0727, 0.1037, 0.1115, 0.1806, 0.1143, 0.1661, 0.1118],
        [0.1529, 0.0785, 0.1095, 0.1264, 0.1418, 0.1184, 0.1569, 0.1157]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1973, 0.1103, 0.1148, 0.1287, 0.1324, 0.1033, 0.1018, 0.1113],
        [0.1238, 0.1022, 0.1266, 0.1259, 0.1288, 0.1240, 0.1213, 0.1474],
        [0.1742, 0.0780, 0.1126, 0.1251, 0.1340, 0.1141, 0.1379, 0.1241],
        [0.1691, 0.0770, 0.1050, 0.1164, 0.1472, 0.1052, 0.1658, 0.1143],
        [0.1553, 0.0827, 0.1080, 0.1089, 0.1519, 0.1270, 0.1477, 0.1185]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 04:54:50 AM | Train: [32/100] Step 000/097 Loss 0.288 Prec@(1,5) (89.1%, 100.0%)
11/21 05:05:31 AM | Train: [32/100] Step 050/097 Loss 0.476 Prec@(1,5) (83.1%, 99.4%)
11/21 05:15:34 AM | Train: [32/100] Step 097/097 Loss 0.480 Prec@(1,5) (83.2%, 99.3%)
11/21 05:18:19 AM | Train: [32/100] Final Prec@1 83.2320%
11/21 05:18:21 AM | Valid: [32/100] Step 000/097 Loss 0.412 Prec@(1,5) (90.6%, 98.4%)
11/21 05:19:50 AM | Valid: [32/100] Step 050/097 Loss 0.583 Prec@(1,5) (80.3%, 99.1%)
11/21 05:21:11 AM | Valid: [32/100] Step 097/097 Loss 0.563 Prec@(1,5) (81.0%, 99.1%)
11/21 05:21:12 AM | Valid: [32/100] Final Prec@1 81.0400%
11/21 05:21:12 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('max_pool_3x3', 0), ('sep_conv_5x5', 2)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3497, 0.0440, 0.0882, 0.1000, 0.1352, 0.0795, 0.1145, 0.0890],
        [0.0986, 0.0492, 0.0832, 0.2515, 0.1288, 0.1365, 0.1009, 0.1513]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1899, 0.0640, 0.1130, 0.1442, 0.1341, 0.0960, 0.1220, 0.1368],
        [0.1373, 0.0637, 0.0921, 0.1512, 0.1740, 0.1167, 0.1240, 0.1409],
        [0.1294, 0.0545, 0.0959, 0.1218, 0.1559, 0.1140, 0.1615, 0.1669]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1746, 0.0669, 0.0990, 0.1848, 0.1576, 0.0995, 0.0924, 0.1252],
        [0.0988, 0.0623, 0.0785, 0.3019, 0.1203, 0.0976, 0.1164, 0.1242],
        [0.1400, 0.0602, 0.0933, 0.1410, 0.1450, 0.0990, 0.1231, 0.1983],
        [0.0850, 0.0520, 0.0735, 0.1380, 0.1756, 0.1186, 0.1369, 0.2205]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1813, 0.0772, 0.1100, 0.1287, 0.1398, 0.0994, 0.1102, 0.1533],
        [0.1262, 0.0785, 0.1001, 0.1427, 0.1402, 0.1082, 0.1119, 0.1922],
        [0.1289, 0.0634, 0.0941, 0.1209, 0.1445, 0.1057, 0.1236, 0.2189],
        [0.0894, 0.0541, 0.0711, 0.1531, 0.1475, 0.1106, 0.1410, 0.2331],
        [0.0703, 0.0503, 0.0569, 0.1138, 0.1632, 0.1239, 0.1613, 0.2602]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3496, 0.0809, 0.0744, 0.1258, 0.1187, 0.0773, 0.0962, 0.0771],
        [0.1208, 0.0854, 0.1156, 0.1192, 0.1376, 0.1197, 0.1184, 0.1832]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2393, 0.1049, 0.0984, 0.1236, 0.1325, 0.1005, 0.0960, 0.1049],
        [0.1334, 0.0998, 0.1262, 0.1177, 0.1226, 0.1225, 0.1188, 0.1591],
        [0.1579, 0.0661, 0.1029, 0.1355, 0.1608, 0.1109, 0.1614, 0.1044]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1849, 0.1084, 0.1113, 0.1259, 0.1314, 0.1103, 0.1149, 0.1129],
        [0.1311, 0.1064, 0.1196, 0.1238, 0.1461, 0.1182, 0.1147, 0.1402],
        [0.1406, 0.0724, 0.1039, 0.1117, 0.1817, 0.1147, 0.1630, 0.1119],
        [0.1538, 0.0787, 0.1103, 0.1259, 0.1415, 0.1172, 0.1559, 0.1167]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1975, 0.1110, 0.1154, 0.1255, 0.1321, 0.1040, 0.1029, 0.1116],
        [0.1257, 0.1030, 0.1267, 0.1258, 0.1287, 0.1232, 0.1196, 0.1472],
        [0.1775, 0.0778, 0.1124, 0.1233, 0.1336, 0.1146, 0.1375, 0.1234],
        [0.1679, 0.0767, 0.1046, 0.1142, 0.1496, 0.1062, 0.1671, 0.1136],
        [0.1543, 0.0815, 0.1064, 0.1079, 0.1542, 0.1266, 0.1509, 0.1182]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 05:21:30 AM | Train: [33/100] Step 000/097 Loss 0.274 Prec@(1,5) (89.1%, 100.0%)
11/21 05:32:24 AM | Train: [33/100] Step 050/097 Loss 0.446 Prec@(1,5) (85.2%, 99.2%)
11/21 05:42:28 AM | Train: [33/100] Step 097/097 Loss 0.474 Prec@(1,5) (83.8%, 99.2%)
11/21 05:44:59 AM | Train: [33/100] Final Prec@1 83.8240%
11/21 05:45:02 AM | Valid: [33/100] Step 000/097 Loss 0.499 Prec@(1,5) (79.7%, 98.4%)
11/21 05:46:29 AM | Valid: [33/100] Step 050/097 Loss 0.583 Prec@(1,5) (80.0%, 99.0%)
11/21 05:47:51 AM | Valid: [33/100] Step 097/097 Loss 0.567 Prec@(1,5) (80.4%, 99.0%)
11/21 05:47:51 AM | Valid: [33/100] Final Prec@1 80.4000%
11/21 05:47:51 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3420, 0.0439, 0.0869, 0.1032, 0.1451, 0.0777, 0.1144, 0.0869],
        [0.1018, 0.0502, 0.0848, 0.2409, 0.1373, 0.1319, 0.1003, 0.1527]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1899, 0.0647, 0.1125, 0.1412, 0.1372, 0.0973, 0.1208, 0.1363],
        [0.1413, 0.0651, 0.0946, 0.1472, 0.1701, 0.1168, 0.1243, 0.1407],
        [0.1318, 0.0553, 0.0973, 0.1182, 0.1546, 0.1164, 0.1596, 0.1668]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1723, 0.0676, 0.1002, 0.1857, 0.1571, 0.0997, 0.0935, 0.1240],
        [0.0996, 0.0631, 0.0792, 0.2989, 0.1204, 0.0964, 0.1177, 0.1247],
        [0.1397, 0.0604, 0.0929, 0.1406, 0.1474, 0.0993, 0.1254, 0.1942],
        [0.0849, 0.0522, 0.0732, 0.1385, 0.1750, 0.1177, 0.1369, 0.2217]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1789, 0.0775, 0.1092, 0.1290, 0.1427, 0.1002, 0.1095, 0.1530],
        [0.1251, 0.0783, 0.0989, 0.1425, 0.1418, 0.1088, 0.1137, 0.1908],
        [0.1303, 0.0642, 0.0942, 0.1207, 0.1423, 0.1056, 0.1254, 0.2173],
        [0.0898, 0.0544, 0.0708, 0.1473, 0.1454, 0.1131, 0.1409, 0.2383],
        [0.0702, 0.0504, 0.0567, 0.1132, 0.1680, 0.1258, 0.1602, 0.2554]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3398, 0.0824, 0.0749, 0.1252, 0.1245, 0.0782, 0.0969, 0.0781],
        [0.1201, 0.0847, 0.1156, 0.1162, 0.1417, 0.1201, 0.1220, 0.1797]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2354, 0.1058, 0.0987, 0.1236, 0.1335, 0.0997, 0.0974, 0.1058],
        [0.1323, 0.0993, 0.1264, 0.1171, 0.1225, 0.1240, 0.1197, 0.1586],
        [0.1552, 0.0660, 0.1014, 0.1354, 0.1604, 0.1127, 0.1658, 0.1031]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1809, 0.1084, 0.1110, 0.1266, 0.1323, 0.1116, 0.1155, 0.1136],
        [0.1302, 0.1058, 0.1197, 0.1248, 0.1455, 0.1192, 0.1154, 0.1394],
        [0.1365, 0.0717, 0.1022, 0.1118, 0.1858, 0.1164, 0.1646, 0.1109],
        [0.1508, 0.0783, 0.1089, 0.1268, 0.1419, 0.1203, 0.1560, 0.1170]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1920, 0.1107, 0.1167, 0.1259, 0.1349, 0.1051, 0.1026, 0.1121],
        [0.1245, 0.1025, 0.1281, 0.1262, 0.1282, 0.1235, 0.1209, 0.1460],
        [0.1736, 0.0773, 0.1115, 0.1249, 0.1346, 0.1155, 0.1390, 0.1235],
        [0.1651, 0.0763, 0.1039, 0.1143, 0.1511, 0.1051, 0.1701, 0.1141],
        [0.1536, 0.0812, 0.1057, 0.1095, 0.1517, 0.1286, 0.1506, 0.1191]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 05:48:09 AM | Train: [34/100] Step 000/097 Loss 0.504 Prec@(1,5) (82.8%, 98.4%)
11/21 05:58:48 AM | Train: [34/100] Step 050/097 Loss 0.466 Prec@(1,5) (84.2%, 99.2%)
11/21 06:08:49 AM | Train: [34/100] Step 097/097 Loss 0.450 Prec@(1,5) (84.5%, 99.4%)
11/21 06:11:56 AM | Train: [34/100] Final Prec@1 84.4960%
11/21 06:11:58 AM | Valid: [34/100] Step 000/097 Loss 0.472 Prec@(1,5) (84.4%, 98.4%)
11/21 06:13:25 AM | Valid: [34/100] Step 050/097 Loss 0.571 Prec@(1,5) (80.5%, 99.1%)
11/21 06:14:46 AM | Valid: [34/100] Step 097/097 Loss 0.553 Prec@(1,5) (81.2%, 99.1%)
11/21 06:14:46 AM | Valid: [34/100] Final Prec@1 81.2480%
11/21 06:14:46 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3406, 0.0442, 0.0862, 0.1053, 0.1459, 0.0778, 0.1133, 0.0868],
        [0.1044, 0.0517, 0.0874, 0.2318, 0.1397, 0.1339, 0.1012, 0.1499]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1920, 0.0656, 0.1134, 0.1431, 0.1332, 0.0965, 0.1211, 0.1351],
        [0.1457, 0.0665, 0.0962, 0.1471, 0.1714, 0.1152, 0.1203, 0.1376],
        [0.1347, 0.0561, 0.0980, 0.1191, 0.1539, 0.1137, 0.1570, 0.1676]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1712, 0.0680, 0.0997, 0.1824, 0.1618, 0.1002, 0.0945, 0.1220],
        [0.1005, 0.0641, 0.0807, 0.2897, 0.1249, 0.0973, 0.1187, 0.1241],
        [0.1420, 0.0611, 0.0932, 0.1443, 0.1445, 0.0983, 0.1256, 0.1910],
        [0.0864, 0.0532, 0.0745, 0.1366, 0.1737, 0.1193, 0.1375, 0.2187]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1771, 0.0778, 0.1089, 0.1292, 0.1415, 0.1020, 0.1109, 0.1526],
        [0.1257, 0.0797, 0.0997, 0.1387, 0.1463, 0.1089, 0.1140, 0.1869],
        [0.1304, 0.0645, 0.0937, 0.1216, 0.1433, 0.1061, 0.1267, 0.2135],
        [0.0906, 0.0549, 0.0711, 0.1471, 0.1430, 0.1131, 0.1445, 0.2356],
        [0.0713, 0.0512, 0.0573, 0.1158, 0.1624, 0.1245, 0.1610, 0.2563]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3338, 0.0821, 0.0761, 0.1245, 0.1290, 0.0773, 0.0982, 0.0790],
        [0.1219, 0.0859, 0.1148, 0.1180, 0.1429, 0.1202, 0.1196, 0.1767]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2312, 0.1058, 0.0990, 0.1222, 0.1359, 0.1005, 0.0987, 0.1067],
        [0.1340, 0.1004, 0.1275, 0.1173, 0.1230, 0.1224, 0.1179, 0.1575],
        [0.1513, 0.0658, 0.1006, 0.1363, 0.1625, 0.1158, 0.1650, 0.1028]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1791, 0.1081, 0.1118, 0.1265, 0.1330, 0.1121, 0.1150, 0.1145],
        [0.1312, 0.1065, 0.1202, 0.1242, 0.1460, 0.1186, 0.1156, 0.1377],
        [0.1361, 0.0716, 0.1014, 0.1108, 0.1880, 0.1146, 0.1670, 0.1104],
        [0.1522, 0.0785, 0.1085, 0.1273, 0.1402, 0.1193, 0.1576, 0.1163]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1903, 0.1107, 0.1162, 0.1277, 0.1345, 0.1044, 0.1032, 0.1129],
        [0.1262, 0.1038, 0.1273, 0.1263, 0.1296, 0.1225, 0.1184, 0.1458],
        [0.1724, 0.0772, 0.1107, 0.1267, 0.1354, 0.1147, 0.1395, 0.1234],
        [0.1657, 0.0765, 0.1040, 0.1123, 0.1544, 0.1043, 0.1691, 0.1136],
        [0.1576, 0.0819, 0.1065, 0.1079, 0.1492, 0.1287, 0.1497, 0.1185]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 06:15:05 AM | Train: [35/100] Step 000/097 Loss 0.377 Prec@(1,5) (82.8%, 100.0%)
11/21 06:25:52 AM | Train: [35/100] Step 050/097 Loss 0.420 Prec@(1,5) (85.8%, 99.6%)
11/21 06:35:59 AM | Train: [35/100] Step 097/097 Loss 0.437 Prec@(1,5) (84.8%, 99.5%)
11/21 06:38:38 AM | Train: [35/100] Final Prec@1 84.8480%
11/21 06:38:40 AM | Valid: [35/100] Step 000/097 Loss 0.400 Prec@(1,5) (84.4%, 100.0%)
11/21 06:40:07 AM | Valid: [35/100] Step 050/097 Loss 0.565 Prec@(1,5) (80.5%, 99.2%)
11/21 06:41:28 AM | Valid: [35/100] Step 097/097 Loss 0.551 Prec@(1,5) (81.2%, 99.0%)
11/21 06:41:29 AM | Valid: [35/100] Final Prec@1 81.2160%
11/21 06:41:29 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3415, 0.0446, 0.0863, 0.1078, 0.1488, 0.0767, 0.1094, 0.0848],
        [0.1047, 0.0507, 0.0833, 0.2379, 0.1313, 0.1435, 0.0995, 0.1490]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1925, 0.0662, 0.1142, 0.1426, 0.1348, 0.0957, 0.1206, 0.1335],
        [0.1479, 0.0659, 0.0941, 0.1510, 0.1658, 0.1177, 0.1200, 0.1377],
        [0.1372, 0.0565, 0.0980, 0.1177, 0.1545, 0.1118, 0.1574, 0.1669]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1690, 0.0685, 0.1006, 0.1831, 0.1636, 0.1014, 0.0931, 0.1207],
        [0.0999, 0.0639, 0.0802, 0.2930, 0.1246, 0.0944, 0.1194, 0.1245],
        [0.1426, 0.0614, 0.0932, 0.1402, 0.1490, 0.0986, 0.1257, 0.1892],
        [0.0874, 0.0535, 0.0745, 0.1372, 0.1696, 0.1191, 0.1406, 0.2181]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1733, 0.0777, 0.1085, 0.1293, 0.1472, 0.1023, 0.1102, 0.1514],
        [0.1266, 0.0797, 0.0996, 0.1406, 0.1443, 0.1078, 0.1132, 0.1882],
        [0.1296, 0.0644, 0.0930, 0.1227, 0.1458, 0.1073, 0.1255, 0.2118],
        [0.0901, 0.0548, 0.0704, 0.1479, 0.1441, 0.1136, 0.1444, 0.2347],
        [0.0719, 0.0515, 0.0575, 0.1166, 0.1624, 0.1224, 0.1608, 0.2569]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3495, 0.0816, 0.0753, 0.1228, 0.1210, 0.0759, 0.0961, 0.0777],
        [0.1220, 0.0856, 0.1149, 0.1174, 0.1490, 0.1181, 0.1176, 0.1755]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2362, 0.1061, 0.0973, 0.1222, 0.1334, 0.1008, 0.0981, 0.1059],
        [0.1332, 0.1000, 0.1276, 0.1175, 0.1221, 0.1246, 0.1161, 0.1589],
        [0.1481, 0.0657, 0.0996, 0.1391, 0.1642, 0.1153, 0.1660, 0.1020]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1794, 0.1079, 0.1108, 0.1274, 0.1331, 0.1120, 0.1151, 0.1143],
        [0.1313, 0.1061, 0.1213, 0.1225, 0.1473, 0.1184, 0.1159, 0.1372],
        [0.1344, 0.0718, 0.1011, 0.1106, 0.1868, 0.1147, 0.1702, 0.1104],
        [0.1531, 0.0786, 0.1081, 0.1264, 0.1409, 0.1184, 0.1581, 0.1164]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1908, 0.1100, 0.1167, 0.1276, 0.1335, 0.1043, 0.1047, 0.1124],
        [0.1260, 0.1035, 0.1280, 0.1256, 0.1294, 0.1218, 0.1199, 0.1457],
        [0.1692, 0.0771, 0.1104, 0.1276, 0.1366, 0.1151, 0.1402, 0.1238],
        [0.1635, 0.0758, 0.1030, 0.1123, 0.1545, 0.1066, 0.1709, 0.1134],
        [0.1556, 0.0812, 0.1052, 0.1077, 0.1507, 0.1274, 0.1534, 0.1188]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 06:41:47 AM | Train: [36/100] Step 000/097 Loss 0.288 Prec@(1,5) (89.1%, 100.0%)
11/21 06:52:27 AM | Train: [36/100] Step 050/097 Loss 0.422 Prec@(1,5) (86.0%, 99.6%)
11/21 07:02:31 AM | Train: [36/100] Step 097/097 Loss 0.457 Prec@(1,5) (84.1%, 99.5%)
11/21 07:05:28 AM | Train: [36/100] Final Prec@1 84.1280%
11/21 07:05:30 AM | Valid: [36/100] Step 000/097 Loss 0.524 Prec@(1,5) (79.7%, 100.0%)
11/21 07:06:57 AM | Valid: [36/100] Step 050/097 Loss 0.572 Prec@(1,5) (80.9%, 98.7%)
11/21 07:08:19 AM | Valid: [36/100] Step 097/097 Loss 0.569 Prec@(1,5) (81.1%, 98.7%)
11/21 07:08:19 AM | Valid: [36/100] Final Prec@1 81.0880%
11/21 07:08:19 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('dil_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3462, 0.0442, 0.0855, 0.1054, 0.1447, 0.0757, 0.1145, 0.0837],
        [0.1026, 0.0499, 0.0825, 0.2403, 0.1305, 0.1406, 0.1037, 0.1498]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1879, 0.0656, 0.1136, 0.1459, 0.1355, 0.0967, 0.1233, 0.1315],
        [0.1454, 0.0648, 0.0930, 0.1525, 0.1688, 0.1157, 0.1212, 0.1385],
        [0.1341, 0.0560, 0.0974, 0.1238, 0.1490, 0.1113, 0.1625, 0.1659]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1670, 0.0681, 0.1002, 0.1875, 0.1634, 0.1005, 0.0931, 0.1201],
        [0.0975, 0.0629, 0.0784, 0.2969, 0.1296, 0.0942, 0.1164, 0.1242],
        [0.1431, 0.0616, 0.0930, 0.1384, 0.1470, 0.0994, 0.1269, 0.1907],
        [0.0877, 0.0537, 0.0743, 0.1381, 0.1735, 0.1194, 0.1380, 0.2152]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1759, 0.0783, 0.1094, 0.1270, 0.1461, 0.1025, 0.1101, 0.1508],
        [0.1263, 0.0789, 0.0980, 0.1432, 0.1454, 0.1057, 0.1161, 0.1864],
        [0.1316, 0.0648, 0.0929, 0.1242, 0.1435, 0.1060, 0.1226, 0.2144],
        [0.0914, 0.0553, 0.0707, 0.1443, 0.1454, 0.1127, 0.1433, 0.2371],
        [0.0726, 0.0518, 0.0578, 0.1169, 0.1612, 0.1226, 0.1627, 0.2545]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3687, 0.0802, 0.0726, 0.1190, 0.1164, 0.0736, 0.0942, 0.0754],
        [0.1215, 0.0865, 0.1123, 0.1163, 0.1450, 0.1187, 0.1201, 0.1796]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2431, 0.1064, 0.0966, 0.1207, 0.1317, 0.1002, 0.0961, 0.1051],
        [0.1319, 0.1002, 0.1271, 0.1163, 0.1230, 0.1241, 0.1176, 0.1598],
        [0.1487, 0.0658, 0.0993, 0.1373, 0.1646, 0.1118, 0.1710, 0.1016]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1801, 0.1080, 0.1095, 0.1283, 0.1345, 0.1110, 0.1151, 0.1134],
        [0.1310, 0.1064, 0.1207, 0.1223, 0.1499, 0.1169, 0.1165, 0.1364],
        [0.1348, 0.0718, 0.1013, 0.1102, 0.1839, 0.1149, 0.1724, 0.1107],
        [0.1531, 0.0786, 0.1080, 0.1248, 0.1416, 0.1176, 0.1599, 0.1164]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1952, 0.1102, 0.1156, 0.1289, 0.1300, 0.1038, 0.1041, 0.1123],
        [0.1261, 0.1042, 0.1260, 0.1259, 0.1298, 0.1210, 0.1216, 0.1453],
        [0.1716, 0.0776, 0.1105, 0.1250, 0.1369, 0.1118, 0.1434, 0.1233],
        [0.1659, 0.0766, 0.1034, 0.1120, 0.1522, 0.1053, 0.1706, 0.1141],
        [0.1563, 0.0816, 0.1049, 0.1058, 0.1527, 0.1283, 0.1520, 0.1185]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 07:08:37 AM | Train: [37/100] Step 000/097 Loss 0.500 Prec@(1,5) (85.9%, 98.4%)
11/21 07:19:16 AM | Train: [37/100] Step 050/097 Loss 0.442 Prec@(1,5) (84.9%, 99.5%)
11/21 07:29:18 AM | Train: [37/100] Step 097/097 Loss 0.461 Prec@(1,5) (83.8%, 99.4%)
11/21 07:32:37 AM | Train: [37/100] Final Prec@1 83.7920%
11/21 07:32:39 AM | Valid: [37/100] Step 000/097 Loss 0.411 Prec@(1,5) (89.1%, 98.4%)
11/21 07:34:06 AM | Valid: [37/100] Step 050/097 Loss 0.574 Prec@(1,5) (80.9%, 99.1%)
11/21 07:35:27 AM | Valid: [37/100] Step 097/097 Loss 0.561 Prec@(1,5) (80.9%, 99.0%)
11/21 07:35:27 AM | Valid: [37/100] Final Prec@1 80.8960%
11/21 07:35:27 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('dil_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3533, 0.0445, 0.0860, 0.1063, 0.1421, 0.0761, 0.1095, 0.0822],
        [0.1016, 0.0489, 0.0801, 0.2495, 0.1298, 0.1411, 0.1011, 0.1479]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1904, 0.0664, 0.1151, 0.1427, 0.1364, 0.0963, 0.1217, 0.1309],
        [0.1485, 0.0644, 0.0920, 0.1525, 0.1710, 0.1151, 0.1185, 0.1379],
        [0.1391, 0.0564, 0.0978, 0.1216, 0.1443, 0.1123, 0.1629, 0.1656]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1715, 0.0705, 0.1041, 0.1850, 0.1555, 0.1015, 0.0928, 0.1192],
        [0.0978, 0.0630, 0.0782, 0.2974, 0.1287, 0.0945, 0.1149, 0.1255],
        [0.1484, 0.0621, 0.0934, 0.1386, 0.1458, 0.0998, 0.1247, 0.1872],
        [0.0886, 0.0544, 0.0750, 0.1341, 0.1748, 0.1206, 0.1387, 0.2138]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1805, 0.0795, 0.1107, 0.1243, 0.1419, 0.1036, 0.1100, 0.1496],
        [0.1259, 0.0784, 0.0971, 0.1448, 0.1463, 0.1055, 0.1160, 0.1860],
        [0.1350, 0.0655, 0.0936, 0.1235, 0.1442, 0.1065, 0.1188, 0.2130],
        [0.0925, 0.0559, 0.0710, 0.1402, 0.1477, 0.1138, 0.1432, 0.2357],
        [0.0721, 0.0520, 0.0576, 0.1173, 0.1629, 0.1234, 0.1640, 0.2508]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3504, 0.0809, 0.0736, 0.1233, 0.1229, 0.0758, 0.0963, 0.0769],
        [0.1206, 0.0869, 0.1146, 0.1189, 0.1422, 0.1188, 0.1200, 0.1781]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2321, 0.1051, 0.0978, 0.1231, 0.1375, 0.1012, 0.0972, 0.1060],
        [0.1302, 0.1003, 0.1280, 0.1194, 0.1245, 0.1247, 0.1146, 0.1583],
        [0.1454, 0.0651, 0.0982, 0.1409, 0.1665, 0.1111, 0.1718, 0.1011]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1766, 0.1080, 0.1099, 0.1289, 0.1366, 0.1112, 0.1155, 0.1133],
        [0.1299, 0.1066, 0.1196, 0.1255, 0.1498, 0.1159, 0.1169, 0.1357],
        [0.1333, 0.0716, 0.1008, 0.1108, 0.1846, 0.1143, 0.1744, 0.1101],
        [0.1531, 0.0793, 0.1088, 0.1249, 0.1415, 0.1180, 0.1581, 0.1163]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1902, 0.1097, 0.1159, 0.1301, 0.1334, 0.1040, 0.1035, 0.1131],
        [0.1255, 0.1047, 0.1267, 0.1251, 0.1295, 0.1221, 0.1223, 0.1441],
        [0.1710, 0.0775, 0.1108, 0.1242, 0.1372, 0.1124, 0.1428, 0.1242],
        [0.1655, 0.0767, 0.1032, 0.1112, 0.1568, 0.1042, 0.1694, 0.1130],
        [0.1573, 0.0814, 0.1044, 0.1082, 0.1513, 0.1269, 0.1517, 0.1187]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 07:35:45 AM | Train: [38/100] Step 000/097 Loss 0.299 Prec@(1,5) (89.1%, 100.0%)
11/21 07:46:23 AM | Train: [38/100] Step 050/097 Loss 0.425 Prec@(1,5) (86.1%, 99.4%)
11/21 07:56:25 AM | Train: [38/100] Step 097/097 Loss 0.437 Prec@(1,5) (85.3%, 99.4%)
11/21 07:59:40 AM | Train: [38/100] Final Prec@1 85.3120%
11/21 07:59:42 AM | Valid: [38/100] Step 000/097 Loss 0.485 Prec@(1,5) (81.2%, 96.9%)
11/21 08:01:10 AM | Valid: [38/100] Step 050/097 Loss 0.558 Prec@(1,5) (81.1%, 99.0%)
11/21 08:02:31 AM | Valid: [38/100] Step 097/097 Loss 0.543 Prec@(1,5) (81.8%, 98.9%)
11/21 08:02:31 AM | Valid: [38/100] Final Prec@1 81.8240%
11/21 08:02:31 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3608, 0.0443, 0.0843, 0.1042, 0.1415, 0.0755, 0.1076, 0.0816],
        [0.1074, 0.0499, 0.0804, 0.2464, 0.1310, 0.1348, 0.1035, 0.1465]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1890, 0.0674, 0.1155, 0.1451, 0.1387, 0.0971, 0.1166, 0.1307],
        [0.1501, 0.0650, 0.0918, 0.1519, 0.1724, 0.1125, 0.1187, 0.1376],
        [0.1430, 0.0570, 0.0978, 0.1228, 0.1403, 0.1141, 0.1597, 0.1653]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1676, 0.0704, 0.1029, 0.1872, 0.1564, 0.1022, 0.0940, 0.1193],
        [0.1001, 0.0637, 0.0783, 0.2940, 0.1311, 0.0954, 0.1139, 0.1236],
        [0.1498, 0.0619, 0.0921, 0.1395, 0.1475, 0.0995, 0.1259, 0.1838],
        [0.0898, 0.0546, 0.0746, 0.1304, 0.1800, 0.1203, 0.1373, 0.2128]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1771, 0.0799, 0.1101, 0.1246, 0.1445, 0.1034, 0.1107, 0.1498],
        [0.1266, 0.0788, 0.0961, 0.1447, 0.1494, 0.1055, 0.1179, 0.1810],
        [0.1345, 0.0652, 0.0926, 0.1251, 0.1438, 0.1079, 0.1202, 0.2108],
        [0.0926, 0.0559, 0.0707, 0.1441, 0.1482, 0.1141, 0.1425, 0.2319],
        [0.0731, 0.0524, 0.0580, 0.1197, 0.1634, 0.1283, 0.1571, 0.2480]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3574, 0.0802, 0.0730, 0.1228, 0.1224, 0.0756, 0.0928, 0.0757],
        [0.1184, 0.0862, 0.1161, 0.1191, 0.1404, 0.1192, 0.1211, 0.1794]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2378, 0.1061, 0.0957, 0.1231, 0.1355, 0.1004, 0.0962, 0.1053],
        [0.1304, 0.1009, 0.1264, 0.1199, 0.1267, 0.1228, 0.1135, 0.1594],
        [0.1517, 0.0656, 0.0992, 0.1405, 0.1628, 0.1103, 0.1682, 0.1015]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1777, 0.1084, 0.1085, 0.1301, 0.1371, 0.1118, 0.1140, 0.1124],
        [0.1294, 0.1067, 0.1201, 0.1240, 0.1501, 0.1161, 0.1172, 0.1364],
        [0.1347, 0.0715, 0.1001, 0.1092, 0.1862, 0.1154, 0.1736, 0.1093],
        [0.1522, 0.0793, 0.1086, 0.1259, 0.1429, 0.1164, 0.1579, 0.1168]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1907, 0.1099, 0.1156, 0.1310, 0.1333, 0.1025, 0.1043, 0.1128],
        [0.1247, 0.1044, 0.1271, 0.1260, 0.1296, 0.1226, 0.1221, 0.1436],
        [0.1737, 0.0773, 0.1094, 0.1251, 0.1363, 0.1110, 0.1441, 0.1232],
        [0.1659, 0.0768, 0.1030, 0.1095, 0.1580, 0.1053, 0.1680, 0.1134],
        [0.1593, 0.0819, 0.1047, 0.1064, 0.1504, 0.1276, 0.1513, 0.1185]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 08:02:49 AM | Train: [39/100] Step 000/097 Loss 0.295 Prec@(1,5) (89.1%, 100.0%)
11/21 08:13:27 AM | Train: [39/100] Step 050/097 Loss 0.412 Prec@(1,5) (85.9%, 99.4%)
11/21 08:23:30 AM | Train: [39/100] Step 097/097 Loss 0.407 Prec@(1,5) (86.0%, 99.5%)
11/21 08:26:19 AM | Train: [39/100] Final Prec@1 86.0160%
11/21 08:26:22 AM | Valid: [39/100] Step 000/097 Loss 0.534 Prec@(1,5) (84.4%, 96.9%)
11/21 08:27:48 AM | Valid: [39/100] Step 050/097 Loss 0.522 Prec@(1,5) (82.9%, 99.2%)
11/21 08:29:10 AM | Valid: [39/100] Step 097/097 Loss 0.514 Prec@(1,5) (82.5%, 99.2%)
11/21 08:29:10 AM | Valid: [39/100] Final Prec@1 82.5440%
11/21 08:29:10 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3574, 0.0442, 0.0831, 0.1054, 0.1405, 0.0753, 0.1131, 0.0811],
        [0.1071, 0.0507, 0.0819, 0.2441, 0.1297, 0.1378, 0.1049, 0.1437]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1910, 0.0674, 0.1143, 0.1395, 0.1378, 0.0985, 0.1210, 0.1306],
        [0.1514, 0.0659, 0.0931, 0.1501, 0.1725, 0.1134, 0.1191, 0.1344],
        [0.1486, 0.0580, 0.0987, 0.1222, 0.1377, 0.1138, 0.1577, 0.1633]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1692, 0.0701, 0.1022, 0.1880, 0.1582, 0.1012, 0.0933, 0.1178],
        [0.0985, 0.0635, 0.0777, 0.2976, 0.1339, 0.0944, 0.1126, 0.1219],
        [0.1531, 0.0622, 0.0920, 0.1405, 0.1472, 0.0985, 0.1283, 0.1782],
        [0.0902, 0.0547, 0.0746, 0.1291, 0.1802, 0.1205, 0.1410, 0.2097]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1779, 0.0796, 0.1091, 0.1247, 0.1422, 0.1026, 0.1147, 0.1492],
        [0.1269, 0.0791, 0.0966, 0.1424, 0.1506, 0.1077, 0.1161, 0.1807],
        [0.1380, 0.0656, 0.0927, 0.1242, 0.1446, 0.1069, 0.1204, 0.2075],
        [0.0944, 0.0565, 0.0712, 0.1437, 0.1458, 0.1157, 0.1439, 0.2289],
        [0.0737, 0.0529, 0.0584, 0.1197, 0.1636, 0.1281, 0.1598, 0.2437]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3472, 0.0796, 0.0734, 0.1239, 0.1257, 0.0785, 0.0951, 0.0767],
        [0.1207, 0.0866, 0.1162, 0.1185, 0.1403, 0.1177, 0.1214, 0.1787]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2355, 0.1059, 0.0949, 0.1231, 0.1351, 0.1022, 0.0971, 0.1062],
        [0.1298, 0.0999, 0.1286, 0.1184, 0.1268, 0.1247, 0.1135, 0.1583],
        [0.1505, 0.0654, 0.0979, 0.1370, 0.1628, 0.1092, 0.1771, 0.1000]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1767, 0.1082, 0.1089, 0.1297, 0.1383, 0.1115, 0.1136, 0.1131],
        [0.1286, 0.1055, 0.1206, 0.1249, 0.1528, 0.1145, 0.1179, 0.1353],
        [0.1348, 0.0714, 0.0998, 0.1099, 0.1843, 0.1161, 0.1747, 0.1089],
        [0.1540, 0.0798, 0.1091, 0.1231, 0.1405, 0.1174, 0.1597, 0.1164]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1905, 0.1089, 0.1159, 0.1313, 0.1338, 0.1012, 0.1049, 0.1134],
        [0.1242, 0.1031, 0.1268, 0.1254, 0.1319, 0.1227, 0.1231, 0.1428],
        [0.1728, 0.0771, 0.1087, 0.1258, 0.1360, 0.1121, 0.1450, 0.1227],
        [0.1689, 0.0773, 0.1034, 0.1091, 0.1530, 0.1052, 0.1694, 0.1137],
        [0.1610, 0.0818, 0.1038, 0.1071, 0.1497, 0.1280, 0.1506, 0.1179]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 08:29:28 AM | Train: [40/100] Step 000/097 Loss 0.363 Prec@(1,5) (85.9%, 100.0%)
11/21 08:40:09 AM | Train: [40/100] Step 050/097 Loss 0.419 Prec@(1,5) (85.6%, 99.4%)
11/21 08:50:09 AM | Train: [40/100] Step 097/097 Loss 0.420 Prec@(1,5) (85.6%, 99.4%)
11/21 08:52:58 AM | Train: [40/100] Final Prec@1 85.6320%
11/21 08:53:01 AM | Valid: [40/100] Step 000/097 Loss 0.389 Prec@(1,5) (85.9%, 100.0%)
11/21 08:54:28 AM | Valid: [40/100] Step 050/097 Loss 0.538 Prec@(1,5) (82.0%, 99.3%)
11/21 08:55:50 AM | Valid: [40/100] Step 097/097 Loss 0.528 Prec@(1,5) (82.2%, 99.2%)
11/21 08:55:50 AM | Valid: [40/100] Final Prec@1 82.2080%
11/21 08:55:50 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3460, 0.0441, 0.0828, 0.1068, 0.1485, 0.0761, 0.1149, 0.0809],
        [0.1084, 0.0509, 0.0820, 0.2451, 0.1273, 0.1430, 0.1005, 0.1428]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1893, 0.0672, 0.1147, 0.1418, 0.1395, 0.0976, 0.1206, 0.1292],
        [0.1479, 0.0656, 0.0926, 0.1560, 0.1734, 0.1120, 0.1192, 0.1334],
        [0.1455, 0.0578, 0.0980, 0.1191, 0.1474, 0.1138, 0.1567, 0.1617]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1710, 0.0700, 0.1029, 0.1783, 0.1602, 0.1018, 0.0960, 0.1197],
        [0.0979, 0.0636, 0.0777, 0.2970, 0.1334, 0.0947, 0.1128, 0.1231],
        [0.1523, 0.0618, 0.0912, 0.1412, 0.1455, 0.1004, 0.1302, 0.1774],
        [0.0908, 0.0548, 0.0745, 0.1305, 0.1818, 0.1203, 0.1401, 0.2073]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1773, 0.0795, 0.1094, 0.1262, 0.1443, 0.1006, 0.1142, 0.1485],
        [0.1286, 0.0800, 0.0979, 0.1429, 0.1478, 0.1064, 0.1158, 0.1806],
        [0.1391, 0.0662, 0.0931, 0.1253, 0.1434, 0.1075, 0.1206, 0.2048],
        [0.0960, 0.0571, 0.0722, 0.1418, 0.1460, 0.1156, 0.1423, 0.2289],
        [0.0739, 0.0531, 0.0586, 0.1179, 0.1643, 0.1287, 0.1624, 0.2410]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3370, 0.0805, 0.0749, 0.1252, 0.1260, 0.0804, 0.0979, 0.0780],
        [0.1236, 0.0875, 0.1155, 0.1196, 0.1427, 0.1133, 0.1233, 0.1746]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2345, 0.1061, 0.0957, 0.1241, 0.1343, 0.1009, 0.0976, 0.1068],
        [0.1316, 0.1007, 0.1293, 0.1183, 0.1261, 0.1235, 0.1145, 0.1560],
        [0.1532, 0.0661, 0.0989, 0.1342, 0.1586, 0.1094, 0.1791, 0.1005]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1744, 0.1078, 0.1088, 0.1298, 0.1388, 0.1116, 0.1159, 0.1129],
        [0.1300, 0.1060, 0.1194, 0.1260, 0.1506, 0.1145, 0.1197, 0.1339],
        [0.1361, 0.0719, 0.1003, 0.1106, 0.1803, 0.1144, 0.1777, 0.1087],
        [0.1549, 0.0797, 0.1092, 0.1217, 0.1406, 0.1156, 0.1613, 0.1170]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1907, 0.1090, 0.1151, 0.1302, 0.1352, 0.1017, 0.1047, 0.1135],
        [0.1256, 0.1036, 0.1257, 0.1261, 0.1313, 0.1209, 0.1245, 0.1424],
        [0.1768, 0.0776, 0.1097, 0.1251, 0.1341, 0.1119, 0.1412, 0.1235],
        [0.1688, 0.0767, 0.1023, 0.1101, 0.1528, 0.1050, 0.1714, 0.1129],
        [0.1613, 0.0820, 0.1041, 0.1081, 0.1474, 0.1268, 0.1525, 0.1179]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 08:56:08 AM | Train: [41/100] Step 000/097 Loss 0.432 Prec@(1,5) (85.9%, 100.0%)
11/21 09:06:45 AM | Train: [41/100] Step 050/097 Loss 0.431 Prec@(1,5) (84.5%, 99.4%)
11/21 09:16:48 AM | Train: [41/100] Step 097/097 Loss 0.422 Prec@(1,5) (84.9%, 99.4%)
11/21 09:19:44 AM | Train: [41/100] Final Prec@1 84.9440%
11/21 09:19:46 AM | Valid: [41/100] Step 000/097 Loss 0.440 Prec@(1,5) (87.5%, 98.4%)
11/21 09:21:13 AM | Valid: [41/100] Step 050/097 Loss 0.563 Prec@(1,5) (81.2%, 99.0%)
11/21 09:22:34 AM | Valid: [41/100] Step 097/097 Loss 0.544 Prec@(1,5) (81.7%, 99.0%)
11/21 09:22:35 AM | Valid: [41/100] Final Prec@1 81.7280%
11/21 09:22:35 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3534, 0.0440, 0.0822, 0.1079, 0.1456, 0.0754, 0.1111, 0.0802],
        [0.1043, 0.0499, 0.0796, 0.2663, 0.1227, 0.1380, 0.1009, 0.1384]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1882, 0.0671, 0.1138, 0.1445, 0.1400, 0.0989, 0.1183, 0.1292],
        [0.1439, 0.0652, 0.0912, 0.1530, 0.1803, 0.1149, 0.1193, 0.1322],
        [0.1441, 0.0574, 0.0968, 0.1207, 0.1464, 0.1162, 0.1587, 0.1597]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1704, 0.0705, 0.1022, 0.1796, 0.1621, 0.1006, 0.0954, 0.1191],
        [0.0957, 0.0634, 0.0770, 0.3011, 0.1316, 0.0948, 0.1131, 0.1232],
        [0.1541, 0.0616, 0.0904, 0.1414, 0.1425, 0.1008, 0.1338, 0.1755],
        [0.0916, 0.0550, 0.0743, 0.1340, 0.1812, 0.1205, 0.1404, 0.2029]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1769, 0.0796, 0.1076, 0.1265, 0.1481, 0.0983, 0.1154, 0.1477],
        [0.1270, 0.0795, 0.0964, 0.1427, 0.1474, 0.1068, 0.1185, 0.1816],
        [0.1399, 0.0664, 0.0929, 0.1271, 0.1398, 0.1090, 0.1190, 0.2059],
        [0.0960, 0.0571, 0.0716, 0.1416, 0.1491, 0.1154, 0.1456, 0.2236],
        [0.0740, 0.0531, 0.0586, 0.1179, 0.1690, 0.1293, 0.1601, 0.2380]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3434, 0.0805, 0.0743, 0.1227, 0.1265, 0.0794, 0.0957, 0.0776],
        [0.1220, 0.0875, 0.1147, 0.1214, 0.1459, 0.1152, 0.1220, 0.1713]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2393, 0.1063, 0.0957, 0.1243, 0.1319, 0.1003, 0.0956, 0.1065],
        [0.1310, 0.1013, 0.1308, 0.1186, 0.1263, 0.1232, 0.1135, 0.1554],
        [0.1531, 0.0667, 0.0992, 0.1352, 0.1569, 0.1094, 0.1792, 0.1002]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1756, 0.1083, 0.1096, 0.1289, 0.1387, 0.1117, 0.1144, 0.1127],
        [0.1301, 0.1069, 0.1198, 0.1259, 0.1477, 0.1161, 0.1195, 0.1339],
        [0.1344, 0.0723, 0.1004, 0.1092, 0.1811, 0.1150, 0.1795, 0.1081],
        [0.1551, 0.0798, 0.1091, 0.1216, 0.1402, 0.1148, 0.1619, 0.1176]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1907, 0.1091, 0.1164, 0.1309, 0.1333, 0.1012, 0.1045, 0.1139],
        [0.1269, 0.1053, 0.1251, 0.1267, 0.1304, 0.1202, 0.1225, 0.1430],
        [0.1736, 0.0779, 0.1094, 0.1263, 0.1364, 0.1109, 0.1423, 0.1231],
        [0.1673, 0.0766, 0.1016, 0.1132, 0.1516, 0.1049, 0.1721, 0.1128],
        [0.1610, 0.0821, 0.1040, 0.1091, 0.1460, 0.1252, 0.1546, 0.1180]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 09:22:52 AM | Train: [42/100] Step 000/097 Loss 0.420 Prec@(1,5) (85.9%, 98.4%)
11/21 09:33:31 AM | Train: [42/100] Step 050/097 Loss 0.407 Prec@(1,5) (85.8%, 99.6%)
11/21 09:43:35 AM | Train: [42/100] Step 097/097 Loss 0.419 Prec@(1,5) (85.5%, 99.4%)
11/21 09:47:05 AM | Train: [42/100] Final Prec@1 85.5360%
11/21 09:47:07 AM | Valid: [42/100] Step 000/097 Loss 0.443 Prec@(1,5) (82.8%, 100.0%)
11/21 09:48:33 AM | Valid: [42/100] Step 050/097 Loss 0.498 Prec@(1,5) (83.2%, 99.3%)
11/21 09:49:55 AM | Valid: [42/100] Step 097/097 Loss 0.498 Prec@(1,5) (83.0%, 99.2%)
11/21 09:49:55 AM | Valid: [42/100] Final Prec@1 83.0080%
11/21 09:49:55 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_5x5', 3)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('dil_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('max_pool_3x3', 2)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3511, 0.0447, 0.0831, 0.1090, 0.1477, 0.0749, 0.1100, 0.0794],
        [0.1076, 0.0513, 0.0818, 0.2523, 0.1248, 0.1367, 0.1041, 0.1413]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1830, 0.0675, 0.1136, 0.1495, 0.1424, 0.0992, 0.1172, 0.1276],
        [0.1482, 0.0667, 0.0927, 0.1505, 0.1783, 0.1139, 0.1176, 0.1320],
        [0.1454, 0.0575, 0.0957, 0.1226, 0.1445, 0.1179, 0.1590, 0.1575]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1702, 0.0708, 0.1024, 0.1820, 0.1630, 0.0989, 0.0956, 0.1171],
        [0.0969, 0.0644, 0.0780, 0.2958, 0.1324, 0.0952, 0.1127, 0.1246],
        [0.1559, 0.0619, 0.0905, 0.1405, 0.1450, 0.1001, 0.1303, 0.1757],
        [0.0926, 0.0555, 0.0747, 0.1310, 0.1814, 0.1226, 0.1400, 0.2022]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1746, 0.0805, 0.1083, 0.1287, 0.1503, 0.0981, 0.1139, 0.1455],
        [0.1264, 0.0798, 0.0962, 0.1417, 0.1496, 0.1075, 0.1180, 0.1808],
        [0.1394, 0.0666, 0.0923, 0.1273, 0.1424, 0.1087, 0.1174, 0.2057],
        [0.0963, 0.0575, 0.0717, 0.1437, 0.1493, 0.1141, 0.1428, 0.2247],
        [0.0743, 0.0537, 0.0588, 0.1181, 0.1641, 0.1314, 0.1562, 0.2436]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3318, 0.0806, 0.0750, 0.1238, 0.1306, 0.0811, 0.0985, 0.0786],
        [0.1245, 0.0888, 0.1149, 0.1190, 0.1469, 0.1158, 0.1216, 0.1685]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2369, 0.1061, 0.0962, 0.1242, 0.1318, 0.1025, 0.0957, 0.1066],
        [0.1310, 0.1017, 0.1293, 0.1177, 0.1282, 0.1224, 0.1142, 0.1556],
        [0.1544, 0.0673, 0.0990, 0.1372, 0.1582, 0.1102, 0.1741, 0.0995]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1734, 0.1084, 0.1081, 0.1289, 0.1395, 0.1128, 0.1158, 0.1131],
        [0.1306, 0.1077, 0.1187, 0.1264, 0.1468, 0.1156, 0.1202, 0.1341],
        [0.1355, 0.0730, 0.1009, 0.1083, 0.1797, 0.1143, 0.1801, 0.1082],
        [0.1558, 0.0804, 0.1095, 0.1215, 0.1398, 0.1147, 0.1603, 0.1179]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1882, 0.1087, 0.1149, 0.1323, 0.1340, 0.1007, 0.1060, 0.1150],
        [0.1262, 0.1049, 0.1236, 0.1281, 0.1305, 0.1209, 0.1241, 0.1416],
        [0.1735, 0.0780, 0.1083, 0.1265, 0.1365, 0.1114, 0.1439, 0.1217],
        [0.1651, 0.0767, 0.1010, 0.1145, 0.1541, 0.1046, 0.1718, 0.1122],
        [0.1608, 0.0819, 0.1032, 0.1102, 0.1441, 0.1257, 0.1553, 0.1187]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 09:50:13 AM | Train: [43/100] Step 000/097 Loss 0.360 Prec@(1,5) (89.1%, 100.0%)
11/21 10:01:07 AM | Train: [43/100] Step 050/097 Loss 0.387 Prec@(1,5) (86.7%, 99.7%)
11/21 10:11:17 AM | Train: [43/100] Step 097/097 Loss 0.387 Prec@(1,5) (86.6%, 99.7%)
11/21 10:14:08 AM | Train: [43/100] Final Prec@1 86.5920%
11/21 10:14:11 AM | Valid: [43/100] Step 000/097 Loss 0.361 Prec@(1,5) (87.5%, 100.0%)
11/21 10:15:38 AM | Valid: [43/100] Step 050/097 Loss 0.519 Prec@(1,5) (82.9%, 99.1%)
11/21 10:17:00 AM | Valid: [43/100] Step 097/097 Loss 0.518 Prec@(1,5) (82.8%, 99.0%)
11/21 10:17:01 AM | Valid: [43/100] Final Prec@1 82.8320%
11/21 10:17:01 AM | genotype = Genotype(normal=[[('max_pool_3x3', 0), ('sep_conv_3x3', 1)], [('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('sep_conv_3x3', 1), ('sep_conv_3x3', 0)], [('sep_conv_5x5', 4), ('max_pool_3x3', 0)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('sep_conv_5x5', 1)], [('max_pool_3x3', 0), ('dil_conv_5x5', 2)], [('sep_conv_5x5', 2), ('max_pool_3x3', 0)], [('max_pool_3x3', 0), ('dil_conv_5x5', 3)]], reduce_concat=range(2, 6))
/home/huawei/anaconda3/envs/lfh_darts/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:808: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
####### ALPHA #######
# Alpha - normal
tensor([[0.3477, 0.0449, 0.0822, 0.1100, 0.1488, 0.0753, 0.1117, 0.0795],
        [0.1083, 0.0519, 0.0821, 0.2381, 0.1259, 0.1415, 0.1110, 0.1412]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1837, 0.0677, 0.1124, 0.1475, 0.1455, 0.1000, 0.1174, 0.1257],
        [0.1488, 0.0671, 0.0925, 0.1505, 0.1764, 0.1146, 0.1188, 0.1313],
        [0.1447, 0.0579, 0.0952, 0.1249, 0.1469, 0.1137, 0.1619, 0.1548]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1682, 0.0713, 0.1028, 0.1845, 0.1627, 0.0986, 0.0953, 0.1165],
        [0.0964, 0.0646, 0.0780, 0.2965, 0.1312, 0.0958, 0.1136, 0.1238],
        [0.1536, 0.0623, 0.0902, 0.1400, 0.1486, 0.0992, 0.1328, 0.1733],
        [0.0931, 0.0562, 0.0753, 0.1338, 0.1784, 0.1240, 0.1397, 0.1996]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1742, 0.0810, 0.1087, 0.1284, 0.1480, 0.0980, 0.1162, 0.1456],
        [0.1249, 0.0799, 0.0959, 0.1429, 0.1494, 0.1075, 0.1202, 0.1792],
        [0.1387, 0.0672, 0.0924, 0.1256, 0.1433, 0.1095, 0.1202, 0.2031],
        [0.0969, 0.0584, 0.0722, 0.1446, 0.1495, 0.1138, 0.1427, 0.2219],
        [0.0741, 0.0540, 0.0589, 0.1162, 0.1683, 0.1309, 0.1604, 0.2371]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)

# Alpha - reduce
tensor([[0.3361, 0.0808, 0.0740, 0.1232, 0.1303, 0.0796, 0.0982, 0.0778],
        [0.1240, 0.0884, 0.1140, 0.1209, 0.1487, 0.1148, 0.1210, 0.1683]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.2333, 0.1063, 0.0965, 0.1262, 0.1323, 0.1027, 0.0964, 0.1063],
        [0.1322, 0.1024, 0.1280, 0.1167, 0.1292, 0.1231, 0.1125, 0.1559],
        [0.1530, 0.0673, 0.0990, 0.1382, 0.1556, 0.1095, 0.1778, 0.0996]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1728, 0.1088, 0.1093, 0.1301, 0.1389, 0.1116, 0.1154, 0.1130],
        [0.1301, 0.1072, 0.1189, 0.1255, 0.1495, 0.1145, 0.1204, 0.1339],
        [0.1346, 0.0729, 0.1009, 0.1086, 0.1804, 0.1146, 0.1797, 0.1083],
        [0.1560, 0.0801, 0.1093, 0.1195, 0.1405, 0.1154, 0.1620, 0.1171]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
tensor([[0.1890, 0.1094, 0.1148, 0.1331, 0.1339, 0.0997, 0.1055, 0.1147],
        [0.1273, 0.1052, 0.1232, 0.1278, 0.1291, 0.1207, 0.1243, 0.1425],
        [0.1726, 0.0780, 0.1083, 0.1250, 0.1376, 0.1124, 0.1451, 0.1211],
        [0.1675, 0.0771, 0.1015, 0.1137, 0.1529, 0.1033, 0.1723, 0.1118],
        [0.1611, 0.0821, 0.1034, 0.1095, 0.1440, 0.1238, 0.1580, 0.1179]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
#####################
11/21 10:17:19 AM | Train: [44/100] Step 000/097 Loss 0.451 Prec@(1,5) (78.1%, 100.0%)
